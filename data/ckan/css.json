[
    {
        "title": "Formatting¶",
        "belongs to": "Formatting¶",
        "cases": [
            {
                "description": "All CSS documents must use two spaces for indentation and files should have no trailing whitespace. Other formatting rules:\nUse soft-tabs with a two space indent. \nUse double quotes. \nUse shorthand notation where possible. \nPut spaces after `:` in property declarations. \nPut spaces before `{` in rule declarations. \nUse hex color codes `#000` unless using `rgba()` . \nAlways provide fallback properties for older browsers. \nUse one line per property declaration. \nAlways follow a rule with one line of whitespace. \nAlways quote `url()` and `@import()` contents. \nDo not indent blocks.\nFor example:",
                "example": ".media {\n  overflow: hidden;\n  color: #fff;\n  background-color: #000; /* Fallback value */\n  background-image: linear-gradient(black, grey);\n}\n\n.media .img {\n  float: left;\n  border: 1px solid #ccc;\n}\n\n.media .img img {\n  display: block;\n}\n\n.media .content {\n  background: #fff url(\"../images/media-background.png\") no-repeat;\n}\n"
            }
        ]
    },
    {
        "title": "Naming¶",
        "belongs to": "Naming¶",
        "cases": [
            {
                "description": "All ids, classes and attributes must be lowercase with hyphens used for separation.",
                "example": "/* GOOD */\n.dataset-list {}\n\n/* BAD */\n.datasetlist {}\n.datasetList {}\n.dataset_list {}\n"
            }
        ]
    },
    {
        "title": "Comments¶",
        "belongs to": "Comments¶",
        "cases": [
            {
                "description": "Comments should be used liberally to explain anything that may be unclear at first glance, especially IE workarounds or hacks.",
                "example": ".prose p {\n  font-size: 1.1666em /* 14px / 12px */;\n}\n\n.ie7 .search-form {\n  /*\n    Force the item to have layout in IE7 by setting display to block.\n    See: http://reference.sitepoint.com/css/haslayout\n  */\n  display: inline-block;\n}\n"
            }
        ]
    },
    {
        "title": "Modularity and specificity¶",
        "belongs to": "Modularity and specificity¶",
        "cases": [
            {
                "description": "Try keep all selectors loosely grouped into modules where possible and avoid having too many selectors in one declaration to make them easy to override.",
                "example": "/* Avoid */\nul#dataset-list {}\nul#dataset-list li {}\nul#dataset-list li p a.download {}\n"
            },
            {
                "description": "Instead here we would create a dataset “module” and styling the item outside of the container allows you to use it on it’s own e.g. on a dataset page:",
                "example": ".dataset-list {}\n.dataset-list-item {}\n.dataset-list-item .download {}\n"
            },
            {
                "description": "In the same vein use classes make the styles more robust, especially where the HTML may change. For example when styling social links:",
                "example": "<ul class=\"social\">\n  <li><a href=\"\">Twitter</a></li>\n  <li><a href=\"\">Facebook</a></li>\n  <li><a href=\"\">LinkedIn</a></li>\n</ul>\n"
            },
            {
                "description": "You may use pseudo selectors to keep the HTML clean:",
                "example": ".social li:nth-child(1) a {\n  background-image: url(twitter.png);\n}\n\n.social li:nth-child(2) a {\n  background-image: url(facebook.png);\n}\n\n.social li:nth-child(3) a {\n  background-image: url(linked-in.png);\n}\n"
            },
            {
                "description": "However this will break any time the HTML changes for example if an item is added or removed. Instead we can use class names to ensure the icons always match the elements (Also you’d probably sprite the image :).",
                "example": ".social .twitter {\n  background-image: url(twitter.png);\n}\n\n.social .facebook {\n  background-image: url(facebook.png);\n}\n\n.social .linked-in {\n  background-image: url(linked-in.png);\n}\n"
            },
            {
                "description": "Avoid using tag names in selectors as this prevents re-use in other contexts.",
                "example": "/* Cannot use this class on an <ol> or <div> element */\nul.dataset-item {}\n"
            },
            {
                "description": "Also ids should not be used in selectors as it makes it far too difficult to override later in the cascade.",
                "example": "/* Cannot override this button style without including an id */\n.btn#download {}\n"
            }
        ]
    }
]