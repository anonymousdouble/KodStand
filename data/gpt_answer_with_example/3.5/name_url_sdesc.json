{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n    </module>\"\n}", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAfter'>\n        <property name='tokens' value='DOT, COMMA, SEMI, POST_INC, POST_DEC, METHOD_REF'/>\n    </module>\"\n}", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Regexp'>\n        <property name='format' value='\\\\b\\\\t\\\\n\\\\f\\\\r\\\\\\\"\\\\'\\\\\\\\'/>\n        <property name='message' value='Use special escape sequences for characters'/>\n        <property name='illegalPattern' value='\\\\012|\\\\u000a'/>\n    </module>\"\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidEscapedUnicodeCharacters'>\n        <property name='allowOutsideStringAndComment' value='false'/>\n    </module>\"\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n    </module>\n    <module name='OneTopLevelClass'>\n        <property name='id' value='OneTopLevelClass'/>\n    </module>\"\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n        <property name='format' value='name'/>\n    </module>\n    <module name='JavadocPackage'>\n        <property name='id' value='JavadocPackage'/>\n        <property name='scope' value='public'/>\n    </module>\"\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='PACKAGE_DEF'/>\n    </module>\"\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n    </module>\n    <module name='PackageAnnotation'>\n        <property name='id' value='PackageAnnotation'/>\n    </module>\"\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='IMPORT'/>\n    </module>\"\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CustomImportOrder'>\n        <property name='option' value='top'/>\n        <property name='groups' value='javax.,java.,org.,com.'/>\n    </module>\n    <module name='CustomImportOrder'>\n        <property name='option' value='bottom'/>\n        <property name='groups' value='all-other-imports'/>\n    </module>\"\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidStaticImport'>\n        <property name='id' value='AvoidStaticImport'/>\n    </module>\"\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneTopLevelClass'/>\n    <module name='PackageDeclaration'>\n        <property name='format' value='^[a-z]+(\\.[a-z][a-z0-9]*)*$'/>\n        <property name='allowNoMatch' value='false'/>\n        <property name='severity' value='error'/>\n    </module>\"\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='DeclarationOrder'>\n        <property name='option' value='public, protected, private, static, final, transient, volatile, synchronized, native, abstract, strictfp'/>\n    </module>\"\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='TEXT'/>\n        <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR'/>\n    </module>\n    <module name='NeedBraces'>\n        <property name='allowSingleLineStatement' value='true'/>\n        <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO'/>\n    </module>\"\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LeftCurly'>\n        <property name='option' value='nl'/>\n        <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT, SWITCH, RECORD_DEF'/>\n    </module>\"\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='concise'/>\n    </module>\"\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n        <property name='lineWrappingIndentation' value='2'/>\n    </module>\"\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneStatementPerLine'>\n        <property name='allowSingleLineBlocks' value='false'/>\n    </module>\"\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LineLength'>\n        <property name='max' value='100'/>\n        <property name='ignorePattern' value='^import\\\\s.*|^package\\\\s.*|^\\\\s*\\\\/\\\\/\\\\s*\\\\S+\\\\s*\\\\S+\\\\s*\\\\S+.*'/>\n    </module>\"\n}", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, LITERAL_CATCH, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, QUESTION, COLON, METHOD_CALL, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, GENERIC_START, GENERIC_END, ENUM_CONSTANT_DEF, LAMBDA, LITERAL_DO, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_RETURN, LITERAL_THROW, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_DO, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='EQUAL, NOT_EQUAL'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='COMMA, LPAREN'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='CTOR_DEF'/>\n    </module>\"\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_TRY, LITERAL_SWITCH, LITERAL_IF, LITERAL_FOR, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_SYNCHRONIZED, QUESTION, COLON, METHOD_CALL, LITERAL_THIS, LITERAL_SUPER, LITERAL_CASE, LITERAL_DEFAULT, GENERIC_START, GENERIC_END, ARRAY_INIT, LAMBDA, LAMBDA_PARAMETERS, LAMBDA_ARROW, TYPECAST, INDEX_OP, DOT, METHOD_REF, EXPR, TYPE_ARGUMENTS, TYPE_PARAMETERS, TYPE_UPPER_BOUND, TYPE_LOWER_BOUND, STATIC_IMPORT, INSTANCEOF, ANNOTATION_MEMBER_VALUE_PAIR, ANNOTATION_ARRAY_INIT, ANNOTATION, TYPE_ARGUMENT, TYPE_PARAMETER, RESOURCE_SPECIFICATION, ENUM_CONSTANT_DEF, ENUM_DEF, ANNOTATION_DEF, INTERFACE_DEF, CLASS_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT, LABELED_STAT, CASE_GROUP, CASE_GROUP_LABEL, CASE_GROUP_BODY, CASE_GROUP_BODY_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK, CASE_GROUP_BODY_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK_LABEL_BLOCK", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='true'/>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF'/>\n    </module>\"\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAfter'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_CATCH'/>\n    </module>\n    <module name='WhitespaceBefore'>\n        <property name='tokens' value='LITERAL_ELSE, LITERAL_CATCH'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='ASSIGN, PLUS, MINUS, DIV, MOD, SL, SR, BSR, STAR, BAND, BOR, BXOR, QUESTION, COLON, LNOT, BNOT, LT, GT, LE, GE, EQUAL, NOTEQUAL, INSTANCEOF, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BAND_ASSIGN, BOR_ASSIGN, BXOR_ASSIGN, LOR, LAND, LITERAL_INSTANCEOF, QUESTIONCOLON, METHOD_REF'/>\n    </module>\"\n}", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAround'>\n        <property name='tokens' value='ASSIGN, PLUS, MINUS, DIV, MOD, STAR, SL, SR, BAND, BOR, BXOR, BNOT, LNOT, LT, GT, LE, GE, EQ, NE, INSTANCEOF, QUESTION, COLON, LOR, LAND, BAND, BOR, QUESTION, COLON'/>\n    </module>\"\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='UnnecessaryParentheses'>\n        <property name='option' value='always'/>\n    </module>\"\n}", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoEnumTrailingComma'>\n        <property name='option' value='allow'/>\n    </module>\"\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='option' value='error'/>\n    </module>\"\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CommentsIndentation'>\n        <property name='eachLine' value='true'/>\n        <property name='allowLineBreaks' value='true'/>\n    </module>\"\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CommentsIndentation'>\n        <property name='eachLine' value='true'/>\n        <property name='ignoreEmpty' value='true'/>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT, ENUM_CONSTANT_DEF, LABELED_STAT, CASE_GROUP, METHOD_CALL, EXPR, TYPECAST, LITERAL_NEW, LITERAL_CATCH, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LAMBDA, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ASSERT, LITERAL_YIELD, LITERAL_RECORD'/>\n    </module>\"\n}", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ModifierOrder'>\n        <property name='id' value='ModifierOrder'/>\n        <property name='tokens' value='PUBLIC, PROTECTED, PRIVATE, ABSTRACT, DEFAULT, STATIC, FINAL, TRANSIENT, VOLATILE, SYNCHRONIZED, NATIVE, STRICTFP'/>\n    </module>\"\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='UpperEll'>\n        <property name='id' value='UpperEll'/>\n        <property name='format' value='^[0-9]+L$'/>\n    </module>\"\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowClasses' value='true'/>\n        <property name='allowInterfaces' value='true'/>\n        <property name='allowEnums' value='true'/>\n        <property name='allowAnnotations' value='true'/>\n    </module>\"\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='format' value='^[a-z]+(\\\\.[a-z0-9]+)*$'/>\n        <property name='severity' value='error'/>\n    </module>\"\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='UPPER_SNAKE_CASE'/>\n        <property name='ignoreFinal' value='false'/>\n        <property name='ignoreStatic' value='false'/>\n        <property name='ignoreMutable' value='false'/>\n        <property name='ignoreNonFinal' value='true'/>\n        <property name='ignoreNonStatic' value='true'/>\n        <property name='ignoreMutableCollection' value='true'/>\n        <property name='ignoreMutableElements' value='true'/>\n        <property name='ignoreMutableValues' value='true'/>\n        <property name='ignoreLogger' value='true'/>\n        <property name='ignoreNonEmptyArray' value='true'/>\n    </module>\"\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowOneCharParameterNames' value='false'/>\n    </module>\"\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='false'/>\n    </module>\"\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='allowClasses' value='true'/>\n        <property name='allowInterfaces' value='true'/>\n        <property name='allowEnums' value='true'/>\n        <property name='allowAnnotations' value='true'/>\n    </module>\n    <module name='TypeName'>\n        <property name='format' value='^[a-zA-Z][a-zA-Z0-9]*T$'/>\n        <property name='allowClasses' value='true'/>\n        <property name='allowInterfaces' value='true'/>\n        <property name='allowEnums' value='true'/>\n        <property name='allowAnnotations' value='true'/>\n    </module>\"\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='allowClasses' value='true'/>\n        <property name='allowInterfaces' value='true'/>\n        <property name='allowEnums' value='true'/>\n        <property name='allowAnnotations' value='true'/>\n    </module>\"\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyCatchBlock'>\n        <property name='option' value='warn'/>\n        <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH'/>\n    </module>\"\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='CTOR_DEF'/>\n    </module>\"\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SuperFinalize'>\n        <property name='id' value='SuperFinalize'/>\n        <property name='tokens' value='METHOD_DEF'/>\n        <property name='option' value='true'/>\n    </module>\"\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SingleLineJavadoc'>\n        <property name='allowBlockTags' value='false'/>\n    </module>\"\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocParagraph'>\n        <property name='allowEmptyParagraphs' value='false'/>\n        <property name='allowSingleParagraph' value='true'/>\n        <property name='allowMultipleParagraphs' value='true'/>\n        <property name='allowConsecutiveBlankLines' value='false'/>\n    </module>\"\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocBlockTagLocation'>\n        <property name='allowAtColumn' value='false'/>\n        <property name='allowFirstBlockTagEmptyLine' value='false'/>\n        <property name='allowMultipleEmptyLines' value='false'/>\n        <property name='allowSingleEmptyLine' value='false'/>\n        <property name='checkFirstBlockTagEmptyLine' value='false'/>\n        <property name='checkMultipleEmptyLines' value='false'/>\n        <property name='checkSingleEmptyLine' value='false'/>\n        <property name='id' value='JavadocBlockTagLocation'/>\n    </module>\"\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SummaryJavadoc'>\n        <property name='forbiddenSummaryFragments' value='A{@codeFoo}isa..., Thismethodreturns..., Savetherecord.'/>\n    </module>\"\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocType'>\n        <property name='scope' value='public'/>\n        <property name='allowedJavadocTypes' value='class, interface, enum, annotation'/>\n    </module>\n    <module name='JavadocVariable'>\n        <property name='scope' value='public'/>\n    </module>\"\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='allowMissingJavadoc' value='false'/>\n        <property name='allowMissingJavadocReturn' value='false'/>\n        <property name='allowMissingJavadocThrows' value='false'/>\n        <property name='allowMissingJavadocTags' value='false'/>\n        <property name='allowMissingJavadocComments' value='false'/>\n        <property name='minLineCount' value='2'/>\n    </module>\"\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingOverride'>\n        <property name='id' value='overrides'/>\n    </module>\"\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocStyle'>\n        <property name='scope' value='public'/>\n        <property name='allowMissingJavadoc' value='true'/>\n        <property name='allowMissingJavadocReturn' value='true'/>\n        <property name='allowMissingJavadocThrows' value='true'/>\n        <property name='allowMissingJavadocType' value='true'/>\n        <property name='allowMissingJavadocDescription' value='true'/>\n        <property name='allowMissingJavadocTag' value='true'/>\n        <property name='allowMissingJavadocParam' value='true'/>\n        <property name='allowMissingJavadocException' value='true'/>\n        <property name='allowMissingJavadocMethod' value='true'/>\n        <property name='allowMissingJavadocField' value='true'/>\n        <property name='allowMissingJavadocTypeParameter' value='true'/>\n        <property name='allowMissingJavadocReturnTag' value='true'/>\n        <property name='allowMissingJavadocThrowsTag' value='true'/>\n        <property name='allowMissingJavadocSeeTag' value='true'/>\n        <property name='allowMissingJavadocSinceTag' value='true'/>\n        <property name='allowMissingJavadocDeprecatedTag' value='true'/>\n        <property name='allowMissingJavadocLink' value='true'/>\n        <property name='allowMissingJavadocValue' value='true'/>\n        <property name='allowMissingJavadocVersion' value='true'/>\n        <property name='allowMissingJavadocAuthor' value='true'/>\n        <property name='allowMissingJavadocParamTag' value='true'/>\n        <property name='allowMissingJavadocReturnDescription' value='true'/>\n        <property name='allowMissingJavadocThrowsDescription' value='true'/>\n        <property name='allowMissingJavadocTypeParameterDescription' value='true'/>\n        <property name='allowMissingJavadocParamDescription' value='true'/>\n        <property name='allowMissingJavadocFieldDescription' value='true'/>\n        <property name='allowMissingJavadocMethodDescription' value='true'/>\n        <property name='allowMissingJavadocTypeDescription' value='true'/>\n        <property name='allowMissingJavadocTypeParameterDescription' value='true'/>\n        <property name='allowMissingJavadocEnumConstantDescription' value='true'/>\n        <property name='allowMissingJavadocAnnotationTypeDescription' value='true'/>\n        <property name='allowMissingJavadocMethodTypeParameterDescription' value='true'/>\n        <property name='allowMissingJavadocMethodParameterDescription' value='true'/>\n        <property name='allowMissingJavadocMethodReturnDescription' value='true'/>\n        <property name='allowMissingJavadocMethodThrowsDescription' value='true'/>\n        <property name='allowMissingJavadocMethodValueDescription' value='true'/>\n        <property name='allowMissingJavadocMethodVersionDescription' value='true'/>\n        <property name='allowMissingJavadocMethodAuthorDescription' value='true'/>\n        <property name='allowMissingJavadocMethodSinceDescription' value='true'/>\n        <property name='allowMissingJavadocMethodSeeDescription' value='true'/>\n        <property name='allowMissingJavadocMethodDeprecatedDescription' value='true'/>\n        <property name='allowMissingJavadocMethodLinkDescription' value='true'/>\n        <property name='allowMissingJavadocMethodSerialDataDescription' value='true'/>\n        <property name='allowMissingJavadocMethodSerialFieldDescription' value='true'/>\n        <property name='allowMissingJavadocMethodVersionTag' value='true'/>\n        <property name='allowMissingJavadocMethodAuthorTag' value='true'/>\n        <property name='allowMissingJavadocMethodSinceTag' value='true'/>\n        <property name='allowMissingJavadocMethodSeeTag' value='true'/>\n        <property name='allowMissingJavadocMethodDeprecatedTag' value='true'/>\n        <property name='allowMissingJavadocMethodLinkTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialDataTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialFieldTag' value='true'/>\n        <property name='allowMissingJavadocMethodValueTag' value='true'/>\n        <property name='allowMissingJavadocMethodVersionTag' value='true'/>\n        <property name='allowMissingJavadocMethodAuthorTag' value='true'/>\n        <property name='allowMissingJavadocMethodSinceTag' value='true'/>\n        <property name='allowMissingJavadocMethodSeeTag' value='true'/>\n        <property name='allowMissingJavadocMethodDeprecatedTag' value='true'/>\n        <property name='allowMissingJavadocMethodLinkTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialDataTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialFieldTag' value='true'/>\n        <property name='allowMissingJavadocMethodValueTag' value='true'/>\n        <property name='allowMissingJavadocMethodVersionTag' value='true'/>\n        <property name='allowMissingJavadocMethodAuthorTag' value='true'/>\n        <property name='allowMissingJavadocMethodSinceTag' value='true'/>\n        <property name='allowMissingJavadocMethodSeeTag' value='true'/>\n        <property name='allowMissingJavadocMethodDeprecatedTag' value='true'/>\n        <property name='allowMissingJavadocMethodLinkTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialDataTag' value='true'/>\n        <property name='allowMissingJavadocMethodSerialFieldTag' value='true'/>\n    </module>\"\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationUseStyle'>\n        <property name='allowSingleMemberAnnotation' value='false'/>\n        <property name='allowSingleLine' value='false'/>\n        <property name='allowSingleLineJavadoc' value='false'/>\n        <property name='allowSingleMemberAnnotation' value='false'/>\n        <property name='allowSingleMemberAnnotation' value='false'/>\n    </module>\"\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationOnSameLine'>\n        <property name='allowSamelineMultipleAnnotations' value='false'/>\n        <property name='allowSamelineSingleParameterlessAnnotation' value='false'/>\n    </module>\"\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingOverride'>\n        <property name='id' value='MissingOverride'/>\n    </module>\"\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationOnSameLine'>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='ANNOTATION'/>\n    </module>\"\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OverloadMethodsDeclarationOrder'>\n        <property name='id' value='overloadMethodsDeclarationOrder'/>\n        <property name='option' value='grouped'/>\n    </module>\"\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MultipleVariableDeclarations'>\n        <property name='allowInForHeader' value='true'/>\n    </module>\"\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LocalFinalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='false'/>\n        <property name='ignoreLocalFinalVariable' value='false'/>\n    </module>\"\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTrailingComma'>\n        <property name='option' value='false'/>\n    </module>\"\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='allowCStyleArrayDeclaration' value='false'/>\n    </module>\"\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n        <property name='lineWrappingIndentation' value='2'/>\n    </module>\"\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='commentFormat' value='fall through'/>\n    </module>\"\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='severity' value='warning'/>\n    </module>\"\n}"}