[
    {
        "title": "4 - Indentation",
        "belongs to": "4 - Indentation",
        "cases": [
            {
                "description": "Four spaces should be used as the unit of indentation. The exact construction of the indentation (spaces vs. tabs) is unspecified. Tabs must be set exactly every 8 spaces (not 4)."
            }
        ]
    },
    {
        "title": "4.1 Line Length",
        "belongs to": "4 - Indentation/4.1 Line Length",
        "cases": [
            {
                "description": "Avoid lines longer than 80 characters, since they're not handled well by many terminals and tools.\nNote: Examples for use in documentation should have a shorter line length-generally no more than 70 characters."
            }
        ]
    },
    {
        "title": "4.2 Wrapping Lines",
        "belongs to": "4 - Indentation/4.2 Wrapping Lines",
        "cases": [
            {
                "description": "When an expression will not fit on a single line, break it according to these general principles:\nBreak after a comma. \nBreak before an operator. \nPrefer higher-level breaks to lower-level breaks. \nAlign the new line with the beginning of the expression at the same level on the previous line. \nIf the above rules lead to confusing code or to code that's squished up against the right margin, just indent 8 spaces instead.\nHere are some examples of breaking method calls:",
                "example": "someMethod(longExpression1, longExpression2, longExpression3,\n\n        longExpression4, longExpression5);\n \nvar = someMethod1(longExpression1,\n                someMethod2(longExpression2,\n                        longExpression3)); \n"
            },
            {
                "description": "Following are two examples of breaking an arithmetic expression. The first is preferred, since the break occurs outside the parenthesized expression, which is at a higher level.",
                "example": "longName1 = longName2 * (longName3 + longName4 - longName5)+ 4 * longname6; // PREFER\nlongName1 = longName2 * (longName3 + longName4\n- longName5) + 4 * longname6; // AVOID\n"
            },
            {
                "description": "Following are two examples of indenting method declarations. The first is the conventional case. The second would shift the second and third lines to the far right if it used conventional indentation, so instead it indents only 8 spaces.",
                "example": "//CONVENTIONAL INDENTATIONsomeMethod(int anArg, Object anotherArg, String yetAnotherArg,\nObject andStillAnother) {\n...\n}\n//INDENT 8 SPACES TO AVOID VERY DEEP INDENTS\nprivate static synchronized horkingLongMethodName(int anArg,\nObject anotherArg, String yetAnotherArg,\nObject andStillAnother) {\n...\n}\n"
            },
            {
                "description": "Line wrapping for `if` statements should generally use the 8-space rule, since conventional (4 space) indentation makes seeing the body difficult. For example:",
                "example": "//DON'T USE THIS INDENTATIONif ((condition1 && condition2)\n|| (condition3 && condition4)\n||!(condition5 && condition6)) { //BAD WRAPS\ndoSomethingAboutIt();            //MAKE THIS LINE EASY TO MISS\n}\n//USE THIS INDENTATION INSTEAD\nif ((condition1 && condition2)\n|| (condition3 && condition4)\n||!(condition5 && condition6)) {\ndoSomethingAboutIt();\n}\n//OR USE THIS\nif ((condition1 && condition2) || (condition3 && condition4)\n||!(condition5 && condition6)) {\ndoSomethingAboutIt();\n}\n"
            },
            {
                "description": "Here are three acceptable ways to format ternary expressions:",
                "example": "alpha = (aLongBooleanExpression) ? beta : gamma;  alpha = (aLongBooleanExpression) ? beta\n: gamma;\nalpha = (aLongBooleanExpression)\n? beta\n: gamma;\n",
                "appendix": "1 \n2 \n3 \n4 \n5 \n6 \n7 \n8 \n9 \n10 \n11"
            }
        ]
    }
]