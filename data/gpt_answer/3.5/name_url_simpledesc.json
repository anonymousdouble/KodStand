{
    "2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n  <property name='id' value='PackageDeclaration'/>\n</module>\"\n    ]\n}",
    "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='WhitespaceAfter'>\n            <property name='id' value='WhitespaceAfter'/>\n            <property name='tokens' value
    "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='RegexpHeader'>\n  <property name='id' value='id_value1'/>\n  <property name='name1' value='value1'/>\n  ...\n  <property name='name2' value='value2'/>\"\n    ]\n}",
    "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AvoidEscapedUnicodeCharacters'/>\",\n        \"<module name='AbbreviationAsWordInName'/>\"\n    ]\n}",
    "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n            <property name='id' value='PackageDeclaration'/>\n        </module>\",\n        \"<module name='OneTopLevelClass'>\n            <property name='id' value='OneTopLevelClass'/>\n        </module>\"\n    ]\n}",
    "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n            <property name='id' value='PackageDeclaration'/>\n            <property name='option' value='ignoreMatches'/>\n        </module>\",\n        \"<module name='PackageAnnotation'>\n            <property name='id' value='PackageAnnotation'/>\n            <property name='option' value='ignoreMatches'/>\n        </module>\"\n    ]\n}",
    "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n  <property name='id' value='PackageDeclaration'/>\n</module>\"\n    ]\n}",
    "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n  <property name='id' value='PackageDeclaration'/>\n</module>\",\n        \"<module name='AvoidStarImport'>\n  <property name='id' value='AvoidStarImport'/>\n</module>\"\n    ]\n}",
    "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoLineWrap'>\n            <property name='id' value='NoLineWrap'/>\n        </module>\"\n    ]\n}",
    "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='CustomImportOrder'>\n  <property name='option' value='top'/>\n  <property name='groups' value='javax.,java.,org.,com.'/>\n</module>\"\n    ]\n}",
    "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AvoidStaticImport'>\n  <property name='id' value='AvoidStaticImport'/>\n</module>\"\n    ]\n}",
    "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OneTopLevelClass'/>\"\n    ]\n}",
    "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='DeclarationOrder'>\n  <property name='id' value='DeclarationOrder'/>\n  <property name='option' value='public, protected, private, abstract, static, final, transient, volatile'/>\n</module>\"\n    ]\n}",
    "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'/>\",\n        \"<module name='VisibilityModifier'/>\",\n        \"<module name='Indentation'/>\",\n        \"<module name='OneTopLevelClass'/>\"\n    ]\n}",
    "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NeedBraces'>\n            <property name='id' value='NeedBraces'/>\n            <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_DO, LITERAL_WHILE'/>\n        </module>\",\n        \"<module name='EmptyBlock'>\n            <property name='id' value='EmptyBlock'/>\n            <property name='option' value='TEXT'/>\n            <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_DO, LITERAL_WHILE'/>\n        </module>\"\n    ]\n}",
    "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LeftCurly'>\n            <property name='option' value='nl'/>\n            <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT'/>\n        </module>\",\n        \"<module name='RightCurly'>\n            <property name='option' value='alone'/>\n            <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT'/>\n        </module>\"\n    ]\n}",
    "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyBlock'>\n            <property name='id' value='EmptyBlock'/>\n            <property name='option' value='allowSingleLineStatement'/>\n        </module>\"\n    ]\n}",
    "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='2'/>\n            <property name='braceAdjustment' value='2'/>\n            <property name='caseIndent' value='2'/>\n            <property name='throwsIndent' value='2'/>\n        </module>\"\n    ]\n}",
    "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OneStatementPerLine'/>\"\n    ]\n}",
    "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LineLength'>\n            <property name='id' value='LineLength'/>\n            <property name='max' value='100'/>\n            <property name='ignorePattern' value='^.*$'/>\n        </module>\"\n    ]\n}",
    "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoLineWrap'>\n            <property name='id' value='NoLineWrap'/>\n            <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, METHOD_CALL, LITERAL_RETURN, LITERAL_THROW, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CATCH, LITERAL_THIS, LITERAL_SUPER, QUESTION, COLON, METHOD_REF'/>\n        </module>\"\n    ]\n}",
    "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OperatorWrap'>\n  <property name='id' value='OperatorWrap'/>\n  <property name='option' value='NL'/>\n</module>\",\n        \"<module name='LambdaBodyLength'>\n  <property name='id' value='LambdaBodyLength'/>\n  <property name='max' value='100'/>\n</module>\",\n        \"<module name='LambdaParameterName'>\n  <property name='id' value='LambdaParameterName'/>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\"\n    ]\n}",
    "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='4'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='caseIndent' value='4'/>\n            <property name='throwsIndent' value='4'/>\n            <property name='lineWrappingIndentation' value='4'/>\n        </module>\"\n    ]\n}",
    "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyLineSeparator'>\n  <property name='id' value='EmptyLineSeparator'/>\n  <property name='tokens' value='PACKAGE_DEF,IMPORT,CLASS_DEF,INTERFACE_DEF,ENUM_DEF,ANNOTATION_DEF,STATIC_INIT,INSTANCE_INIT,METHOD_DEF,CTOR_DEF,VAR_DEF'/>\n</module>\",\n        \"<module name='EmptyBlock'>\n  <property name='id' value='EmptyBlock'/>\n  <property name='option' value='TEXT'/>\n  <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, SEMI, METHOD_DEF, CTOR_DEF, STATIC_INIT, INSTANCE_INIT, LITERAL_ASSERT, LITERAL_THROW, LITERAL_ENUM, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_DEFAULT, LITERAL_CASE, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, SEMI, METHOD_DEF, CTOR_DEF, STATIC_INIT, INSTANCE_INIT, LITERAL_ASSERT, LITERAL_THROW, LITERAL_ENUM, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_DEFAULT, LITERAL_CASE'/>\n</module>\"\n    ]\n}",
    "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='WhitespaceAround'>\n            <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, LITERAL_CATCH, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, QUESTION, COLON, METHOD_REF, LAMBDA, TYPECAST, INSTANCEOF, NEW, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, METHOD_CALL, IDENT, ARRAY_INIT, ARRAY_DECLARATOR, INDEX_OP, POST_INC, POST_DEC, DOT, SPREAD, SUPER_CTOR_CALL, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_SWITCH, LITERAL_DO, LITERAL_WHILE",
    "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoWhitespaceBeforeCaseDefaultColon'>\n  <property name='option' value='noWhitespaceBeforeColon'/>\n</module>\",\n        \"<module name='NoEnumTrailingComma'>\n  <property name='option' value='false'/>\n</module>\"\n    ]\n}",
    "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='UnnecessaryParentheses'>\n            <property name='id' value='UnnecessaryParentheses'/>\n            <property name='tokens' value='LITERAL_NOT, LITERAL_AND, LITERAL_OR, LITERAL_XOR, LITERAL_EQUALS, LITERAL_NOT_EQUALS, LITERAL_LESS, LITERAL_GREATER, LITERAL_LESS_EQUALS, LITERAL_GREATER_EQUALS, LITERAL_INSTANCEOF, LITERAL_PLUS, LITERAL_MINUS, LITERAL_MULTIPLY, LITERAL_DIVIDE, LITERAL_MODULO, LITERAL_PLUS_ASSIGN, LITERAL_MINUS_ASSIGN, LITERAL_MULTIPLY_ASSIGN, LITERAL_DIVIDE_ASSIGN, LITERAL_MODULO_ASSIGN, LITERAL_OR_ASSIGN, LITERAL_AND_ASSIGN, LITERAL_XOR_ASSIGN, LITERAL_LEFT_SHIFT, LITERAL_RIGHT_SHIFT, LITERAL_UNSIGNED_RIGHT_SHIFT, LITERAL_LEFT_SHIFT_ASSIGN, LITERAL_RIGHT_SHIFT_ASSIGN, LITERAL_UNSIGNED_RIGHT_SHIFT_ASSIGN'/>\n        </module>\"\n    ]\n}",
    "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoEnumTrailingComma'/>\"\n    ]\n}",
    "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FallThrough'>\n  <property name='id' value='fallthrough'/>\n</module>\"\n    ]\n}",
    "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Comments'>\n            <property name='id' value='Comments'/>\n            <property name='format' value='^[ \\t]*//.*$'/>\n            <property name='ignoreFormat' value='false'/>\n        </module>\"\n    ]\n}",
    "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='CommentsIndentation'>\n  <property name='id' value='CommentsIndentation'/>\n  <property name='format' value='^(\\\\s*\\\\*[^/]|\\\\s*\\\\*)'/>\n</module>\"\n    ]\n}",
    "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ModifierOrder'>\n            <property name='id' value='ModifierOrder'/>\n            <property name='tokens' value='PUBLIC, PROTECTED, PRIVATE, ABSTRACT, DEFAULT, STATIC, FINAL, TRANSIENT, VOLATILE, SYNCHRONIZED, NATIVE, STRICTFP'/>\n        </module>\"\n    ]\n}",
    "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='UpperEll'>\n            <property name='id' value='UpperEll'/>\n            <property name='format' value='^[0-9]+L$'/>\n            <property name='ignoreFormat' value='false'/>\n        </module>\"\n    ]\n}",
    "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='TypeName'>\n            <property name='id' value='TypeName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='MethodName'>\n            <property name='id' value='MethodName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='ParameterName'>\n            <property name='id' value='ParameterName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='LocalVariableName'>\n            <property name='id' value='LocalVariableName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='PackageName'>\n            <property name='id' value='PackageName'/>\n            <property name='format' value='^[a-z][a-z0-9]*(\\\\.[a-z][a-z0-9]*)*$'/>\n        </module>\"\n    ]\n}",
    "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n            <property name='id' value='PackageDeclaration'/>\n            <property name='format' value='^[a-z]+(\\\\.[a-z][a-z0-9]*)*$'/>\n        </module>\"\n    ]\n}",
    "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n            <property name='severity' value='warning'/>\n        </module>\",\n        \"<module name='InterfaceTypeParameterName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n            <property name='severity' value='warning'/>\n        </module>\",\n        \"<module name='ClassTypeParameterName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n            <property name='severity' value='warning'/>\n        </module>\",\n        \"<module name='RecordComponentName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='severity' value='warning'/>\n        </module>\"\n    ]\n}",
    "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MethodName'>\n            <property name='id' value='MethodName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}",
    "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ConstantName'>\n            <property name='format' value='UPPER_SNAKE_CASE'/>\n        </module>\"\n    ]\n}",
    "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ConstantName'>\n            <property name='id' value='id_value1'/>\n            <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        </module>\",\n        \"<module name='LocalVariableName'>\n            <property name='id' value='id_value2'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}",
    "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ParameterName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='allowOneCharParameterNames' value='false'/>\n        </module>\"\n    ]\n}",
    "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LocalVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='ignoreFinal' value='false'/>\n        </module>\"\n    ]\n}",
    "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$|^[a-zA-Z][a-zA-Z0-9]*T$'/>\n        </module>\"\n    ]\n}",
    "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n            <property name='allowClasses' value='true'/>\n            <property name='allowInterfaces' value='true'/>\n            <property name='allowEnums' value='true'/>\n            <property name='allowAnnotations' value='true'/>\n        </module>\",\n        \"<module name='MethodName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='allowStaticMethodNames' value='false'/>\n            <property name='allowConstructorNames' value='false'/>\n        </module>\",\n        \"<module name='ParameterName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='LocalVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}",
    "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyCatchBlock'/>\"\n    ]\n}",
    "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='StaticVariableName'>\n            <property name='id' value='StaticVariableName'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}",
    "6.4 Finalizers: not used": "{\n    \"Answer\": \"No\",\n    \"Configuration\": []\n}",
    "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocMethod'>\",\n        \"  <property name='id' value='JavadocMethod'/>\",\n        \"</module>\",\n        \"<module name='SingleLineJavadoc'>\",\n        \"  <property name='id' value='SingleLineJavadoc'/>\",\n        \"</module>\"\n    ]\n}",
    "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocParagraph'>\\n  <property name='id' value='JavadocParagraph'/>\\n</module>\",\n        \"<module name='RequireEmptyLineBeforeBlockTagGroup'>\\n  <property name='id' value='RequireEmptyLineBeforeBlockTagGroup'/>\\n</module>\"\n    ]\n}",
    "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocTagContinuationIndentation'>\n  <property name='id' value='block_tags_order'/>\n  <property name='param' value='@param'/>\n  <property name='return' value='@return'/>\n  <property name='throws' value='@throws'/>\n  <property name='deprecated' value='@deprecated'/>\n</module>\"\n    ]\n}",
    "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='SummaryJavadoc'>\n            <property name='id' value='SummaryJavadoc'/>\n            <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, METHOD_DEF, CTOR_DEF'/>\n            <property name='severity' value='warning'/>\n            <property name='forbiddenSummaryFragments' value='A{@codeFoo}isa..., Thismethodreturns..., Savetherecord.'/>\n        </module>\"\n    ]\n}",
    "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocPackage'>\n  <property name='id' value='JavadocPackage'/>\n  <property name='scope' value='public'/>\n  <property name='allowedJavadocTags' value='@author, @version, @since, @param, @return, @throws, @see, @serial, @serialField, @serialData, @deprecated'/>\n</module>\",\n        \"<module name='JavadocType'>\n  <property name='id' value='JavadocType'/>\n  <property name='scope' value='public'/>\n  <property name='allowedJavadocTags' value='@author, @version, @since, @serial, @serialField, @serialData, @deprecated'/>\n</module>\",\n        \"<module name='JavadocMethod'>\n  <property name='id' value='JavadocMethod'/>\n  <property name='scope' value='public'/>\n  <property name='allowedJavadocTags' value='@param, @return, @throws, @deprecated'/>\n</module>\"\n    ]\n}",
    "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocMethod'>\",\n        \"  <property name='id' value='JavadocMethod'/>\",\n        \"  <property name='scope' value='public'/>\",\n        \"  <property name='allowMissingJavadoc' value='false'/>\",\n        \"</module>\",\n        \"<module name='JavadocVariable'>\",\n        \"  <property name='id' value='JavadocVariable'/>\",\n        \"  <property name='scope' value='public'/>\",\n        \"  <property name='allowMissingJavadoc' value='false'/>\",\n        \"</module>\"\n    ]\n}",
    "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocVariable'>\\n  <property name='id' value='JavadocVariable'/>\\n</module>\",\n        \"<module name='MissingJavadocMethod'>\\n  <property name='id' value='MissingJavadocMethod'/>\\n</module>\"\n    ]\n}",
    "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocType'>\",\n        \"  <property name='id' value='JavadocType'/>\",\n        \"</module>\",\n        \"<module name='JavadocMethod'>\",\n        \"  <property name='id' value='JavadocMethod'/>\",\n        \"</module>\",\n        \"<module name='JavadocPackage'>\",\n        \"  <property name='id' value='JavadocPackage'/>\",\n        \"</module>\"\n    ]\n}",
    "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationUseStyle'/>\"\n    ]\n}",
    "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'/>\",\n        \"<module name='PackageAnnotation'/>\"\n    ]\n}",
    "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MissingDeprecated'/>\",\n        \"<module name='MissingOverride'/>\"\n    ]\n}",
    "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationUseStyle'/>\",\n        \"<module name='AnnotationOnSameLine'/>\"\n    ]\n}",
    "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ParameterName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='allowOneWordNames' value='true'/>\n        </module>\",\n        \"<module name='LocalVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='allowOneWordNames' value='true'/>\n        </module>\"\n    ]\n}",
    "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OverloadMethodsDeclarationOrder'/>\"\n    ]\n}",
    "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MultipleVariableDeclarations'>\n            <property name='id' value='one_variable_per_declaration'/>\n        </module>\"\n    ]\n}",
    "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FinalLocalVariable'>\n  <property name='id' value='FinalLocalVariable'/>\n  <property name='tokens' value='VARIABLE_DEF'/>\n  <property name='option' value='ignoreFinal'/>\n</module>\",\n        \"<module name='VariableDeclarationUsageDistance'>\n  <property name='id' value='VariableDeclarationUsageDistance'/>\n  <property name='maxDistance' value='5'/>\n</module>\"\n    ]\n}",
    "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ArrayTypeStyle'>\n  <property name='id' value='ArrayTypeStyle'/>\n  <property name='allowSingleLine' value='true'/>\n  <property name='allowInlineStyle' value='true'/>\n</module>\",\n        \"<module name='NoArrayTrailingComma'>\n  <property name='id' value='NoArrayTrailingComma'/>\n</module>\"\n    ]\n}",
    "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ArrayTypeStyle'>\n  <property name='id' value='ArrayTypeStyle'/>\n  <property name='allowCStyleArrayDeclaration' value='false'/>\n</module>\"\n    ]\n}",
    "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='id' value='Indentation'/>\n            <property name='basicOffset' value='2'/>\n            <property name='caseIndent' value='2'/>\n            <property name='throwsIndent' value='2'/>\n        </module>\"\n    ]\n}",
    "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FallThrough'>\n            <property name='id' value='fallthrough'/>\n            <property name='commentFormat' value='// fall through'/>\n        </module>\"\n    ]\n}",
    "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MissingSwitchDefault'/>\"\n    ]\n}"
}