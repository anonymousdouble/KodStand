{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n        <property name='fileExtensions' value='java'/>\n    </module>\n    <module name='RegexpHeader'>\n        <property name='charset' value='UTF-8'/>\n        <property name='fileExtensions' value='java'/>\n        <property name='header' value='.*'/>\n    </module>\"\n}", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n        <property name='fileExtensions' value='java'/>\n    </module>\n    <module name='WhitespaceAfter'>\n        <property name='tokens' value='COMMA, SEMI, TYPECAST, COLON, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_ELSE, LITERAL_RETURN, LITERAL_THROW, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS'/>\n    </module>\"\n}", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AvoidEscapedUnicodeCharacters'>\\n    <property name='allowByTailComment' value='false'/>\\n    <property name='allowEscapesForControlCharacters' value='false'/>\\n    <property name='allowIfAllCharactersEscaped' value='false'/>\\n    <property name='allowNonPrintableEscapes' value='false'/>\\n</module>\"\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidEscapedUnicodeCharacters'>\n        <property name='allowByTailComment' value='true'/>\n        <property name='allowEscapesForControlCharacters' value='true'/>\n        <property name='allowIfAllCharactersEscaped' value='false'/>\n        <property name='allowNonPrintableEscapes' value='true'/>\n    </module>\"\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n    </module>\n    <module name='OneTopLevelClass'>\n    </module>\n    <module name='EmptyLineSeparator'>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF'/>\n    </module>\"\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='Header'>\\n    <property name='header' value='Your License or Copyright Information Here'/>\\n</module>\"\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='PackageDeclaration'>\\n</module>\\n<module name='NoLineWrap'>\\n    <property name='tokens' value='PACKAGE_DEF'/>\\n</module>\"\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidStarImport'>\n        <property name='allowClassImports' value='false'/>\n        <property name='allowStaticMemberImports' value='false'/>\n    </module>\n    <module name='AvoidStaticImport'>\n        <property name='excludes' value=''/>\n    </module>\"\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='IMPORT'/>\n    </module>\"\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CustomImportOrder'>\n        <property name='customImportOrderRules' value='STATIC###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE'/>\n        <property name='separateLineBetweenGroups' value='true'/>\n        <property name='sortImportsInGroupAlphabetically' value='true'/>\n    </module>\"\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='AvoidStaticImport'>\n        <property name='excludes' value=''/>\n    </module>\"\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneTopLevelClass'/>\n    <module name='PackageDeclaration'>\n        <property name='matchDirectoryStructure' value='true'/>\n    </module>\"\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='DeclarationOrder'>\n        <property name='ignoreConstructors' value='false'/>\n        <property name='ignoreModifiers' value='false'/>\n    </module>\n    <module name='InnerTypeLast'/>\n    <module name='OverloadMethodsDeclarationOrder'/>\"\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='forceStrictCondition' value='true'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NeedBraces'>\n        <property name='allowEmptyLoopBody' value='true'/>\n        <property name='allowSingleLineStatement' value='false'/>\n        <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_DO, LITERAL_WHILE'/>\n    </module>\"\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='LeftCurly'>\n        <property name='option' value='NL'/>\n    </module>\n    <module name='RightCurly'>\n        <property name='option' value='NL'/>\n    </module>\"\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='text'/>\n    </module>\"\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n    </module>\n    <module name='CommentsIndentation'>\n        <property name='tokens' value='SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN'/>\n    </module>\"\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneStatementPerLine'>\n        <property name='treatTryResourcesAsStatement' value='true'/>\n    </module>\"\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LineLength'>\n        <property name='max' value='100'/>\n        <property name='ignorePattern' value='^package\\\\s|^import\\\\s|a long URL in Javadoc|a long JSNI method reference|Command lines in a comment|Very long identifiers'/>\n    </module>\"\n}", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='8'/>\n        <property name='throwsIndent' value='4'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='forceStrictCondition' value='false'/>\n    </module>\"\n}", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='PLUS, MINUS, DIV, STAR, MOD, SR, BSR, GE, GT, LE, LT, BXOR, BOR, BAND, LOR, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF, EQUAL, NOT_EQUAL, LITERAL_ASSERT, LITERAL_THROWS, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_ELSE, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_NULL, LITERAL_TRUE, LITERAL_FALSE, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_CONST, LITERAL_GOTO, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_CONST, LITERAL_GOTO, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF, TYPE_EXTENSION_AND, BOR, BAND, LOR, LAND, LITERAL_CATCH'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='ASSIGN, COLON, COMMA, LPAREN'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF'/>\n    </module>\"\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='forceStrictCondition' value='false'/>\n    </module>\"\n}", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='true'/>\n        <property name='allowNoEmptyLineBetweenFields' value='true'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT'/>\n    </module>\"\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAround'>\n        <property name='tokens' value='ASSIGN, BAND, BOR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, TYPE_EXTENSION_AND, UNSIGNED_SR'/>\n    </module>\n    <module name='WhitespaceAfter'>\n        <property name='tokens' value='COMMA, SEMI, TYPECAST'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, LITERAL_CATCH, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF, OBJBLOCK, STATIC_INIT'/>\n    </module>\n    <module name='EmptyForInitializerPad'>\n        <property name='option' value='space'/>\n    </module>\n    <module name='EmptyForIteratorPad'>\n        <property name='option' value='space'/>\n    </module>\n    <module name='ParenPad'>\n        <property name='option' value='space'/>\n    </module>\n    <module name='TypecastParenPad'>\n        <property name='option' value='space'/>\n    </module>\"\n}", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"No\",\n    \"Configuration\": \"\"\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='UnnecessaryParentheses'>\n        <property name='tokens' value='EXPR, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_CASE, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_TRY, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_INSTANCEOF, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_NON_SEALED, LITERAL_PERMITS, LITERAL_RECORD_COMPONENT, LITERAL_RECORD_COMPONENTS, LITERAL_RECORD_BODY, LITERAL_RECORD_HEADER, LITERAL_RECORD_CONSTRUCTOR, LITERAL_RECORD_METHOD, LITERAL_RECORD_FIELD, LITERAL_RECORD_TYPE, LITERAL_RECORD_TYPE_PARAMETER, LITERAL_RECORD_TYPE_PARAMETERS, LITERAL_RECORD_TYPE_PARAMETER_BOUND, LITERAL_RECORD_TYPE_PARAMETER_BOUNDS, LITERAL_RECORD_TYPE_PARAMETER_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS, LITERAL_RECORD_TYPE_PARAMETER_LISTS_BOUNDS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LISTS_LIST", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoEnumTrailingComma'/>\n    <module name='UnnecessarySemicolonInEnumeration'/>\n    <module name='Indentation'>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='forceStrictCondition' value='true'/>\n        <property name='lineWrappingIndentation' value='8'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='true'/>\n    </module>\n    <module name='NoWhitespaceBeforeCaseDefaultColon'/>\n    <module name='DefaultComesLast'>\n        <property name='skipIfLastAndSharedWithCase' value='false'/>\n    </module>\"\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CommentsIndentation'>\n        <property name='tokens' value='SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN, BLOCK_COMMENT_END'/>\n    </module>\n    <module name='TrailingComment'>\n        <property name='format' value='^\\\\s*//.*$'/>\n        <property name='legalComment' value='^\\\\s*//.*$'/>\n    </module>\"\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CommentsIndentation'>\n        <property name='tokens' value='BLOCK_COMMENT_BEGIN, BLOCK_COMMENT_END, COMMENT_CONTENT, COMMENT_END, COMMENT_START, SINGLE_LINE_COMMENT'/>\n    </module>\"\n}", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ModifierOrder'>\n    </module>\"\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='UpperEll'>\n    </module>\"\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='PackageName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='LambdaParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='InterfaceTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='TypeName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='RecordComponentName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MemberName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MethodTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='CatchParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='RecordTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='LocalFinalVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='PatternVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='LocalVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MethodName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='ParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='ConstantName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='StaticVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n</module>\"\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageName'>\n        <property name='format' value='^[a-z]+(\\.[a-z][a-z0-9]*)*$'/>\n    </module>\"\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n    </module>\n    <module name='RegexpOnFilename'>\n        <property name='fileNamePattern' value='^.*Test\\\\.java$'/>\n        <property name='match' value='true'/>\n    </module>\"\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\n    <module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]*)*$'/>\n        <property name='applyToPrivate' value='true'/>\n    </module>\"\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        <property name='applyToPublic' value='true'/>\n        <property name='applyToProtected' value='true'/>\n        <property name='applyToPackage' value='true'/>\n        <property name='applyToPrivate' value='true'/>\n    </module>\"\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MemberName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\n    <module name='ParameterAssignment'/>\n    <module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ClassTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\n    <module name='InterfaceTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\n    <module name='MethodTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\"\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='TypeName'>\\n    <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='MethodName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='MemberName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='ParameterName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='LocalVariableName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='RecordComponentName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='LambdaParameterName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\"\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyCatchBlock'>\n        <property name='commentFormat' value='^\\\\s*//\\\\s*.*$'/>\n        <property name='exceptionVariableName' value='^expected.*$'/>\n    </module>\"\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='RequireThis'>\n        <property name='checkFields' value='true'/>\n        <property name='checkMethods' value='true'/>\n    </module>\"\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoFinalizer'>\n    </module>\"\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocStyle'>\n        <property name='checkEmptyJavadoc' value='true'/>\n        <property name='checkFirstSentence' value='true'/>\n        <property name='checkHtml' value='true'/>\n        <property name='endOfSentenceFormat' value='[.?!]([ \\t\\n\\r\\f<])'/>\n        <property name='scope' value='public'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF'/>\n    </module>\n    <module name='SingleLineJavadoc'>\n        <property name='ignoreInlineTags' value='true'/>\n        <property name='ignoredTags' value='@return, @param, @throws'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\"\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocParagraph'>\n        <property name='allowNewlineParagraph' value='false'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\n    <module name='RequireEmptyLineBeforeBlockTagGroup'>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\"\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AtclauseOrder'>\n        <property name='tagOrder' value='param, return, throws, deprecated'/>\n        <property name='target' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\n    <module name='NonEmptyAtclauseDescription'>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n        <property name='javadocTokens' value='PARAM_RETURN_THROWS_DEPRECATED'/>\n    </module>\n    <module name='JavadocTagContinuationIndentation'>\n        <property name='offset' value='4'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\"\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SummaryJavadoc'>\n        <property name='forbiddenSummaryFragments' value='A{@code Foo} is a|This method returns|Save the record'/>\n        <property name='period' value='true'/>\n    </module>\n    <module name='SingleLineJavadoc'>\n        <property name='ignoreInlineTags' value='true'/>\n        <property name='ignoredTags' value='@return'/>\n    </module>\"\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocType'>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='private, package'/>\n    </module>\n    <module name='JavadocMethod'>\n        <property name='accessModifiers' value='public, protected'/>\n    </module>\"\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingJavadocMethod'>\n        <property name='allowMissingPropertyJavadoc' value='true'/>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='private, package'/>\n        <property name='ignoreMethodNamesRegex' value='^get[A-Z].*'/>\n    </module>\"\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MissingJavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='protected, package, private'/>\n        <property name='allowedAnnotations' value='Override'/>\n    </module>\"\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocVariable'>\n        <property name='excludeScope' value='private'/>\n        <property name='scope' value='public, protected, package'/>\n    </module>\n    <module name='MissingJavadocMethod'>\n        <property name='excludeScope' value='private'/>\n        <property name='scope' value='public, protected, package'/>\n    </module>\n    <module name='JavadocType'>\n        <property name='excludeScope' value='private'/>\n        <property name='scope' value='public, protected, package'/>\n    </module>\"\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AnnotationLocation'>\\n    <property name='allowSamelineMultipleAnnotations' value='false'/>\\n    <property name='allowSamelineParameterizedAnnotation' value='false'/>\\n    <property name='allowSamelineSingleParameterlessAnnotation' value='false'/>\\n    <property name='tokens' value='ANNOTATION'/>\\n</module>\"\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSamelineMultipleAnnotations' value='false'/>\n        <property name='allowSamelineParameterizedAnnotation' value='false'/>\n        <property name='allowSamelineSingleParameterlessAnnotation' value='false'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF'/>\n    </module>\"\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AnnotationLocation'>\\n    <property name='allowSamelineSingleParameterlessAnnotation' value='true'/>\\n</module>\"\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSamelineMultipleAnnotations' value='true'/>\n        <property name='tokens' value='FIELD_DEF'/>\n    </module>\"\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"No\",\n    \"Configuration\": \"\"\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OverloadMethodsDeclarationOrder'/>\n    \"\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MultipleVariableDeclarations'>\n    </module>\"\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='VariableDeclarationUsageDistance'>\n        <property name='allowedDistance' value='1'/>\n        <property name='ignoreFinal' value='true'/>\n        <property name='ignoreVariablePattern' value=''/>\n        <property name='validateBetweenScopes' value='true'/>\n    </module>\"\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='ArrayTypeStyle'>\\n    <property name='javaStyle' value='true'/>\\n</module>\\n<module name='NoArrayTrailingComma'/>\\n<module name='Indentation'>\\n    <property name='arrayInitIndent' value='4'/>\\n</module>\"\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='javaStyle' value='true'/>\n    </module>\"\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n    </module>\n    <module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='true'/>\n    </module>\"\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='false'/>\n        <property name='reliefPattern' value='// fall through'/>\n    </module>\"\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='MissingSwitchDefault'>\\n</module>\\n<module name='FallThrough'>\\n    <property name='checkLastCaseGroup' value='true'/>\\n</module>\"\n}"}