{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n    </module>\"\n}", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAfter'>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, LITERAL_THROWS, LITERAL_RETURN, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_THROW, LITERAL_RETURN, LITERAL_THIS, LITERAL_SUPER, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, L", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Regexp'>\n        <property name='format' value='\\\\b'/>\n        <property name='message' value='Use special escape sequences for characters'/>\n        <property name='illegalPattern' value='\\\\\\\\[0-7]{1,3}|\\\\\\\\u[0-9a-fA-F]{4}'/>\n    </module>\"\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidEscapedUnicodeCharacters'>\n        <property name='allowOutsideStringAndComment' value='false'/>\n    </module>\"\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n    </module>\n    <module name='OneTopLevelClass'>\n        <property name='id' value='OneTopLevelClass'/>\n    </module>\"\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='RegexpHeader'>\n        <property name='header' value='License|copyright'/>\n        <property name='fileExtensions' value='java'/>\n    </module>\"\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='PACKAGE_DEF'/>\n    </module>\"\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n        <property name='format' value='^[a-z]+(\\.[a-z]+)*$'/>\n    </module>\"\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='option' value='false'/>\n    </module>\"\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CustomImportOrder'>\n        <property name='customImportOrderRules' value='STATIC###STANDARD'/>\n        <property name='sortImportsInGroupAlphabetically' value='true'/>\n        <property name='separateLineBetweenGroups' value='true'/>\n    </module>\"\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidStaticImport'>\n        <property name='id' value='AvoidStaticImport'/>\n        <property name='severity' value='warning'/>\n    </module>\"\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='OneTopLevelClass'/>\"\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='DeclarationOrder'>\n        <property name='option' value='public, protected, private, static, final, transient, volatile, synchronized, native, abstract, strictfp'/>\n    </module>\"\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NeedBraces'>\n        <property name='option' value='any'/>\n        <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_DO, LITERAL_WHILE'/>\n    </module>\"\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LeftCurly'>\n        <property name='option' value='nl'/>\n        <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF'/>\n    </module>\"\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='EmptyBlock'>\n        <property name='option' value='concise'/>\n    </module>\"\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n        <property name='lineWrappingIndentation' value='2'/>\n    </module>\"\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneStatementPerLine'>\n        <property name='id' value='oneStatementPerLine'/>\n        <property name='option' value='allowSingleLineStatement'/>\n    </module>\"\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LineLength'>\n        <property name='max' value='100'/>\n        <property name='ignorePattern' value='^import\\\\s.*|^package\\\\s.*|^\\\\s*\\\\/\\\\/\\\\s*\\\\S+.*|^\\\\s*\\\\*\\\\s*\\\\S+.*'/>\n    </module>\"\n}", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='option' value='ignoreForStatement'/>\n    </module>\"\n}", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='EQUAL, NOT_EQUAL'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='COMMA, LPAREN'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='CTOR_DEF'/>\n    </module>\"\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='extendsIndent' value='4'/>\n        <property name='implementsIndent' value='4'/>\n        <property name='typecastIndent' value='4'/>\n        <property name='methodDeclaration' value='4'/>\n        <property name='arrayInit' value='4'/>\n        <property name='type' value='4'/>\n        <property name='enumConstant' value='4'/>\n        <property name='assignSubtype' value='4'/>\n        <property name='throwsIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='extendsIndent' value='4'/>\n        <property name='implementsIndent' value='4'/>\n        <property name='typecastIndent' value='4'/>\n        <property name='methodDeclaration' value='4'/>\n        <property name='arrayInit' value='4'/>\n        <property name='type' value='4'/>\n        <property name='enumConstant' value='4'/>\n        <property name='assignSubtype' value='4'/>\n    </module>\"\n}", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='true'/>\n    </module>\"\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAfter'>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF, LAMBDA, METHOD_REF'/>\n    </module>\n    <module name='WhitespaceAfter'>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='RPAREN, SEMI, TYPECAST, UNARY_MINUS, UNARY_PLUS, POST_INC, POST_DEC, DOT, LNOT, BNOT, UPLUS, UMINUS, PLUS, MINUS, DIV, MOD, STAR, SL, SR, BSR, GE, GT, LE, LT, INSTANCEOF, BAND, BOR, BXOR, QUESTION, COLON, LOR, LAND, ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BAND_ASSIGN, BOR_ASSIGN, BXOR_ASSIGN, ELVIS, METHOD_REF'/>\n    </module>\"\n}", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='allowOneLineElements' value='true'/>\n        <property name='basicOffset' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='UnnecessaryParentheses'>\n        <property name='option' value='always'/>\n        <property name='tokens' value='LAMBDA, METHOD_REF, TYPECAST, INSTANCEOF, NEW_CLASS, NEW_ARRAY, PARENTHESES'/>\n    </module>\"\n}", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoEnumTrailingComma'/>\"\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoWhitespaceBeforeCaseDefaultColon'>\n        <property name='option' value='true'/>\n    </module>\"\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='CommentsIndentation'>\n        <property name='eachLine' value='true'/>\n    </module>\"\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='CommentsIndentation'>\n        <property name='eachLine' value='true'/>\n        <property name='format' value='^(\\\\h*\\\\*).*'/>\n    </module>\"\n}", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='ModifierOrder'>\n        <property name='id' value='ModifierOrder'/>\n        <property name='format' value='public, protected, private, abstract, default, static, final, transient, volatile, synchronized, native, strictfp'/>\n    </module>\"\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='UpperEll'>\n        <property name='format' value='L'/>\n    </module>\"\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='IllegalIdentifierName'>\n        <property name='format' value='\\\\w+'/>\n        <property name='formatViolationMessage' value='Identifier names should only contain ASCII letters, digits, and underscores'/>\n    </module>\"\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageName'>\n        <property name='format' value='^[a-z0-9]+(\\\\.[a-z0-9]+)*$'/>\n        <property name='illegalFormat' value='^[A-Z]|[_]'/>\n    </module>\"\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='ignoreAnnotation' value='true'/>\n        <property name='ignoreInterface' value='true'/>\n        <property name='ignorePrimitive' value='true'/>\n    </module>\"\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='formatViolationMessage' value='Method name must be in lowerCamelCase'/>\n    </module>\"\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='UPPER_SNAKE_CASE'/>\n        <property name='ignoreScope' value='false'/>\n        <property name='allowMutableFields' value='false'/>\n    </module>\"\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowOneCharParameterNames' value='false'/>\n    </module>\"\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='false'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='allowClasses' value='true'/>\n        <property name='allowInterfaces' value='true'/>\n        <property name='allowEnums' value='true'/>\n        <property name='allowAnnotations' value='true'/>\n        <property name='allowTypeVariables' value='true'/>\n    </module>\n    <module name='TypeName'>\n        <property name='format' value='^[a-zA-Z][a-zA-Z0-9]*T$'/>\n        <property name='allowClasses' value='false'/>\n        <property name='allowInterfaces' value='false'/>\n        <property name='allowEnums' value='false'/>\n        <property name='allowAnnotations' value='false'/>\n        <property name='allowTypeVariables' value='true'/>\n    </module>\"\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='allowDigits' value='true'/>\n    </module>\"\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyCatchBlock'>\n        <property name='severity' value='warning'/>\n        <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH'/>\n    </module>\"\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='VisibilityModifier'>\n        <property name='allowPublicStaticMethod' value='true'/>\n    </module>\"\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='SuperFinalize'>\n        <property name='option' value='ignore'/>\n    </module>\"\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='allowMissingJavadoc' value='false'/>\n        <property name='allowMissingJavadocReturn' value='false'/>\n        <property name='allowMissingJavadocThrows' value='false'/>\n        <property name='allowMissingJavadocTags' value='false'/>\n        <property name='allowMissingJavadocComments' value='false'/>\n        <property name='minLineCount' value='2'/>\n    </module>\"\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocParagraph'>\n        <property name='allowEmptyParagraphs' value='true'/>\n        <property name='allowSingleParagraph' value='true'/>\n        <property name='allowMultipleParagraphs' value='true'/>\n        <property name='allowParagraphAfterBlockTag' value='true'/>\n    </module>\"\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocBlockTagLocation'>\n        <property name='allowAtToken' value='true'/>\n        <property name='allowBeforeTag' value='true'/>\n        <property name='allowEmptyAtToken' value='false'/>\n        <property name='allowEmptyBeforeTag' value='false'/>\n        <property name='allowEmptyLineBeforeBlockTag' value='false'/>\n        <property name='allowMultipleAtTokens' value='false'/>\n        <property name='allowMultipleBeforeTags' value='false'/>\n        <property name='allowSingleLine' value='true'/>\n        <property name='id' value='JavadocBlockTagLocation'/>\n    </module>\"\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='SummaryJavadoc'>\n        <property name='forbiddenSummaryFragments' value='A{@code, Thismethodreturns, Savetherecord'/>\n        <property name='allowSingleSentence' value='true'/>\n        <property name='endOfSentenceFormat' value='.'/>\n    </module>\"\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocType'>\n        <property name='scope' value='public'/>\n        <property name='allowMissingJavadoc' value='false'/>\n        <property name='allowMissingJavadocInOverriddenMethods' value='false'/>\n        <property name='allowMissingJavadocMethod' value='false'/>\n        <property name='allowMissingJavadocConstructor' value='false'/>\n        <property name='allowMissingJavadocField' value='false'/>\n        <property name='allowMissingJavadocType' value='false'/>\n        <property name='allowMissingJavadocParameter' value='false'/>\n        <property name='allowMissingJavadocReturn' value='false'/>\n        <property name='allowMissingJavadocThrows' value='false'/>\n        <property name='allowMissingJavadocType' value='false'/>\n    </module>\"\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='allowSimpleJavadoc' value='true'/>\n    </module>\"\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingOverride'>\n        <property name='scope' value='public'/>\n    </module>\"\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocType'>\n        <property name='scope' value='non-required'/>\n    </module>\"\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSameline' value='true'/>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, ENUM_CONSTANT_DEF, PARAMETER_DEF, TYPE_PARAMETER, TYPE_ARGUMENT, LAMBDA, RESOURCE_SPECIFICATION'/>\n    </module>\"\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='id' value='AnnotationLocation'/>\n        <property name='format' value='separateLine'/>\n    </module>\"\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='AnnotationLocation'>\n        <property name='allowSameline' value='true'/>\n        <property name='allowBlock' value='true'/>\n    </module>\"\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationOnSameLine'>\n        <property name='allowLineBreaks' value='false'/>\n        <property name='tokens' value='ANNOTATION'/>\n    </module>\"\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowOneCharMethods' value='false'/>\n    </module>\"\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='OverloadMethodsDeclarationOrder'>\n        <property name='id' value='overloadMethodsDeclarationOrder'/>\n        <property name='sameName' value='true'/>\n        <property name='sameNameForAll' value='true'/>\n    </module>\"\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MultipleVariableDeclarations'>\n        <property name='allowForLoop' value='true'/>\n    </module>\"\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LocalFinalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='false'/>\n        <property name='ignorePrivate' value='false'/>\n        <property name='ignoreStatic' value='false'/>\n        <property name='ignoreTypes' value='false'/>\n    </module>\"\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='allowSingleLine' value='true'/>\n        <property name='allowInlineStyle' value='true'/>\n    </module>\"\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='ArrayTypeStyle'>\n        <property name='allowCStyleArrayDeclaration' value='false'/>\n    </module>\"\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n        <property name='lineWrappingIndentation' value='4'/>\n    </module>\"\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='commentFormat' value='// fall through'/>\n    </module>\"\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingSwitchDefault'>\n        <property name='severity' value='warning'/>\n        <property name='enumCaseCoverage' value='true'/>\n    </module>\"\n}"}