{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='FileTabCharacter'>\\n    <property name='fileExtensions' value='java'/>\\n</module>\\n<module name='PackageDeclaration'>\\n    <property name='matchDirectoryStructure' value='true'/>\\n</module>\\n<module name='VisibilityModifier'>\\n    <property name='allowPublicFinalFields' value='true'/>\\n    <property name='allowPublicImmutableFields' value='true'/>\\n    <property name='ignoreAnnotationCanonicalNames' value='Override,Generated'/>\\n    <property name='immutableClassCanonicalNames' value='java.lang.String,java.lang.Integer'/>\\n    <property name='packageAllowed' value='true'/>\\n    <property name='protectedAllowed' value='true'/>\\n    <property name='publicMemberPattern' value='^PUBLIC_.*'/>\\n</module>\\n<module name='Indentation'>\\n    <property name='arrayInitIndent' value='4'/>\\n    <property name='basicOffset' value='4'/>\\n    <property name='braceAdjustment' value='0'/>\\n    <property name='caseIndent' value='4'/>\\n    <property name='forceStrictCondition' value='true'/>\\n    <property name='lineWrappingIndentation' value='8'/>\\n    <property name='throwsIndent' value='4'/>\\n</module>\\n<module name='OneTopLevelClass'/>\\n<module name='MissingDeprecated'>\\n    <property name='violateExecutionOnNonTightHtml' value='true'/>\\n</module>\\n<module name='JavadocVariable'>\\n    <property name='excludeScope' value='private'/>\\n    <property name='ignoreNamePattern' value='^log$'/>\\n    <property name='scope' value='public,protected'/>\\n    <property name='tokens' value='VARIABLE_DEF'/>\\n</module>\\n<module name='NoEnumTrailingComma'/>\\n<module name='UniqueProperties'>\\n    <property name='fileExtensions' value='properties'/>\\n</module>\\n<module name='JavadocTagContinuationIndentation'>\\n    <property name='offset' value='4'/>\\n    <property name='violateExecutionOnNonTightHtml' value='true'/>\\n</module>\\n<module name='LambdaParameterName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='SuperFinalize'/>\\n<module name='EmptyForIteratorPad'>\\n    <property name='option' value='space'/>\\n</module>\\n<module name='OneStatementPerLine'>\\n    <property name='treatTryResourcesAsStatement' value='true'/>\\n</module>\\n<module name='InterfaceTypeParameterName'>\\n    <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='MissingJavadocMethod'>\\n    <property name='allowMissingPropertyJavadoc' value='true'/>\\n    <property name='allowedAnnotations' value='Override,Generated'/>\\n    <property name='excludeScope' value='private'/>\\n    <property name='ignoreMethodNamesRegex' value='^get.*|set.*'/>\\n    <property name='minLineCount' value='5'/>\\n    <property name='scope' value='public,protected'/>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<module name='JavaNCSS'>\\n    <property name='classMaximum' value='1500'/>\\n    <property name='fileMaximum' value='3000'/>\\n    <property name='methodMaximum' value='100'/>\\n    <property name='recordMaximum' value='500'/>\\n</module>\\n<module name='UnnecessaryParentheses'>\\n    <property name='tokens' value='EXPR,ASSIGN'/>\\n</module>\\n<module name='FallThrough'>\\n    <property name='checkLastCaseGroup' value='true'/>\\n    <property name='reliefPattern' value='^// fall through$'/>\\n</module>\\n<module name='JavadocType'>\\n    <property name='allowMissingParamTags' value='true'/>\\n    <property name='allowUnknownTags' value='true'/>\\n    <property name='allowedAnnotations' value='Generated'/>\\n    <property name='authorFormat' value='^[A-Za-z ]+$'/>\\n    <property name='excludeScope' value='private'/>\\n    <property name='scope' value='public,protected'/>\\n    <property name='versionFormat' value='^[0-9]+\\\\.[0-9]+$'/>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='NPathComplexity'>\\n    <property name='max' value='200'/>\\n</module>\\n<module name='TrailingComment'>\\n    <property name='format' value='^// TODO:.*$'/>\\n    <property name='legalComment' value='^//.*$'/>\\n</module>\\n<module name='PackageAnnotation'/>\\n<module name='BooleanExpressionComplexity'>\\n    <property name='max' value='3'/>\\n    <property name='tokens' value='EXPR'/>\\n</module>\\n<module name='UnusedImports'>\\n    <property name='processJavadoc' value='true'/>\\n</module>\\n<module name='HideUtilityClassConstructor'/>\\n<module name='NestedIfDepth'>\\n    <property name='max' value='3'/>\\n</module>\\n<module name='NoWhitespaceBeforeCaseDefaultColon'/>\\n<module name='ThrowsCount'>\\n    <property name='ignorePrivateMethods' value='true'/>\\n    <property name='max' value='3'/>\\n</module>\\n<module name='CommentsIndentation'>\\n    <property name='tokens' value='SINGLE_LINE_COMMENT,BLOCK_COMMENT_BEGIN'/>\\n</module>\\n<module name='UnnecessarySemicolonInEnumeration'/>\\n<module name='MethodLength'>\\n    <property name='countEmpty' value='true'/>\\n    <property name='max' value='100'/>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<module name='OrderedProperties'>\\n    <property name='fileExtensions' value='properties'/>\\n</module>\\n<module name='TypecastParenPad'>\\n    <property name='option' value='space'/>\\n</module>\\n<module name='TypeName'>\\n    <property name='applyToPackage' value='true'/>\\n    <property name='applyToPrivate' value='true'/>\\n    <property name='applyToProtected' value='true'/>\\n    <property name='applyToPublic' value='true'/>\\n    <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='UnnecessarySemicolonAfterOuterTypeDeclaration'>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='VariableDeclarationUsageDistance'>\\n    <property name='allowedDistance' value='5'/>\\n    <property name='ignoreFinal' value='true'/>\\n    <property name='ignoreVariablePattern' value='^log$'/>\\n    <property name='validateBetweenScopes' value='true'/>\\n</module>\\n<module name='InvalidJavadocPosition'/>\\n<module name='MissingJavadocType'>\\n    <property name='excludeScope' value='private'/>\\n    <property name='scope' value='public,protected'/>\\n    <property name='skipAnnotations' value='Generated'/>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='RegexpHeader'>\\n    <property name='charset' value='UTF-8'/>\\n    <property name='fileExtensions' value='java'/>\\n    <property name='header' value='^// This is a header$'/>\\n    <property name='headerFile' value='header.txt'/>\\n    <property name='multiLines' value='1,2'/>\\n</module>\\n<module name='EmptyCatchBlock'>\\n    <property name='commentFormat' value='^// TODO:.*$'/>\\n    <property name='exceptionVariableName' value='^e$'/>\\n</module>\\n<module name='RecordComponentName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='CovariantEquals'/>\\n<module name='OperatorWrap'>\\n    <property name='option' value='NL'/>\\n    <property name='tokens' value='EQUAL,NOT_EQUAL'/>\\n</module>\\n<module name='AvoidInlineConditionals'/>\\n<module name='MemberName'>\\n    <property name='applyToPackage' value='true'/>\\n    <property name='applyToPrivate' value='true'/>\\n    <property name='applyToProtected' value='true'/>\\n    <property name='applyToPublic' value='true'/>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='OverloadMethodsDeclarationOrder'/>\\n<module name='AvoidDoubleBraceInitialization'/>\\n<module name='AvoidNoArgumentSuperConstructorCall'/>\\n<module name='MethodTypeParameterName'>\\n    <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='MissingOverride'>\\n    <property name='javaFiveCompatibility' value='true'/>\\n</module>\\n<module name='ClassMemberImpliedModifier'>\\n    <property name='violateImpliedStaticOnNestedEnum' value='true'/>\\n    <property name='violateImpliedStaticOnNestedInterface' value='true'/>\\n    <property name='violateImpliedStaticOnNestedRecord' value='true'/>\\n</module>\\n<module name='ClassDataAbstractionCoupling'>\\n    <property name='excludeClassesRegexps' value='^java\\\\..*'/>\\n    <property name='excludedClasses' value='String,Integer'/>\\n    <property name='excludedPackages' value='java.util'/>\\n    <property name='max' value='10'/>\\n</module>\\n<module name='AnnotationUseStyle'>\\n    <property name='closingParens' value='sameLine'/>\\n    <property name='elementStyle' value='singleLine'/>\\n    <property name='trailingArrayComma' value='true'/>\\n</module>\\n<module name='ClassTypeParameterName'>\\n    <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='ParameterNumber'>\\n    <property name='ignoreAnnotatedBy' value='Inject'/>\\n    <property name='ignoreOverriddenMethods' value='true'/>\\n    <property name='max' value='5'/>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<module name='IllegalInstantiation'>\\n    <property name='classes' value='java.util.Date'/>\\n</module>\\n<module name='AvoidStaticImport'>\\n    <property name='excludes' value='java.lang.Math.*,java.lang.System.out'/>\\n</module>\\n<module name='MatchXpath'>\\n    <property name='query' value='//METHOD_DEF[./IDENT[@text='toString'] and not(./MODIFIERS/ANNOTATION/IDENT[@text='Override'])]'/>\\n</module>\\n<module name='IllegalTokenText'>\\n    <property name='format' value='^TODO:.*$'/>\\n    <property name='ignoreCase' value='true'/>\\n    <property name='message' value='TODO comments are not allowed.'/>\\n    <property name='tokens' value='SINGLE_LINE_COMMENT,BLOCK_COMMENT_BEGIN'/>\\n</module>\\n<module name='Translation'>\\n    <property name='baseName' value='messages'/>\\n    <property name='fileExtensions' value='properties'/>\\n    <property name='requiredTranslations' value='en,fr,de'/>\\n</module>\\n<module name='MissingCtor'/>\\n<module name='ExecutableStatementCount'>\\n    <property name='max' value='30'/>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<module name='JavadocContentLocation'>\\n    <property name='location' value='sameLine'/>\\n</module>\\n<module name='RegexpMultiline'>\\n    <property name='fileExtensions' value='java'/>\\n    <property name='format' value='^// TODO:.*$'/>\\n    <property name='ignoreCase' value='true'/>\\n    <property name='matchAcrossLines' value='true'/>\\n    <property name='maximum' value='1'/>\\n    <property name='message' value='TODO comments are not allowed.'/>\\n    <property name='minimum' value='0'/>\\n</module>\\n<module name='AtclauseOrder'>\\n    <property name='tagOrder' value='@param,@return,@throws'/>\\n    <property name='target' value='METHOD_DEF,CTOR_DEF'/>\\n    <property name='violateExecutionOnNonTightHtml' value='true'/>\\n</module>\\n<module name='InnerTypeLast'/>\\n<module name='FinalLocalVariable'>\\n    <property name='validateEnhancedForLoopVariable' value='true'/>\\n    <property name='tokens' value='VARIABLE_DEF'/>\\n</module>\\n<module name='WhitespaceAfter'>\\n    <property name='tokens' value='COMMA,SEMI'/>\\n</module>\\n<module name='ClassFanOutComplexity'>\\n    <property name='excludeClassesRegexps' value='^java\\\\..*'/>\\n    <property name='excludedClasses' value='String,Integer'/>\\n    <property name='excludedPackages' value='java.util'/>\\n    <property name='max' value='20'/>\\n</module>\\n<module name='RegexpSinglelineJava'>\\n    <property name='format' value='^// TODO:.*$'/>\\n    <property name='ignoreCase' value='true'/>\\n    <property name='ignoreComments' value='true'/>\\n    <property name='maximum' value='1'/>\\n    <property name='message' value='TODO comments are not allowed.'/>\\n    <property name='minimum' value='0'/>\\n</module>\\n<module name='SingleLineJavadoc'>\\n    <property name='ignoreInlineTags' value='true'/>\\n    <property name='ignoredTags' value='@param,@return,@throws'/>\\n    <property name='violateExecutionOnNonTightHtml' value='true'/>\\n</module>\\n<module name='NoLineWrap'>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<module name='MethodCount'>\\n    <property name='maxPackage' value='10'/>\\n    <property name='maxPrivate' value='10'/>\\n    <property name='maxProtected' value='10'/>\\n    <property name='maxPublic' value='10'/>\\n    <property name='maxTotal' value='50'/>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='AnnotationLocation'>\\n    <property name='allowSamelineMultipleAnnotations' value='true'/>\\n    <property name='allowSamelineParameterizedAnnotation' value='true'/>\\n    <property name='allowSamelineSingleParameterlessAnnotation' value='true'/>\\n    <property name='tokens' value='ANNOTATION_DEF'/>\\n</module>\\n<module name='RedundantModifier'>\\n    <property name='tokens' value='CLASS_DEF,INTERFACE_DEF'/>\\n</module>\\n<module name='JavadocPackage'>\\n    <property name='allowLegacy' value='true'/>\\n    <property name='fileExtensions' value='java'/>\\n</module>\\n<module name='DesignForExtension'>\\n    <property name='ignoredAnnotations' value='Generated'/>\\n    <property name='requiredJavadocPhrase' value='^This method is designed for extension.*$'/>\\n</module>\\n<module name='CatchParameterName'>\\n    <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\\n</module>\\n<module name='MissingSwitchDefault'/>\\n<module name='StringLiteralEquality'/>\\n<module name='ArrayTypeStyle'>\\n    <property name='javaStyle' value='true'/>\\n</module>\\n<module name='NoArrayTrailingComma'/>\\n<module name='FileLength'>\\n    <property name='fileExtensions' value='java'/>\\n    <property name='max' value='2000'/>\\n</module>\\n<module name='SimplifyBooleanExpression'/>\\n<module name='IllegalToken'>\\n    <property name='tokens' value='LITERAL_ASSERT'/>\\n</module>\\n<module name='InnerAssignment'/>\\n<module name='MissingJavadocPackage'/>\\n<module name='AvoidNestedBlocks'>\\n    <property name='allowInSwitchCase' value='true'/>\\n</module>\\n<module name='MethodParamPad'>\\n    <property name='allowLineBreaks' value='true'/>\\n    <property name='option' value='space'/>\\n    <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\\n</module>\\n<", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n        <property name='fileExtensions' value='java'/>\n    </module>\n    <module name='WhitespaceAfter'>\n        <property name='tokens' value='COMMA, SEMI, TYPECAST, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_DO, LITERAL_WHILE, LITERAL_FOR, LITERAL_IF, LITERAL_ELSE, LITERAL_RETURN, LITERAL_THROW, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS'/>\n    </module>\"\n}", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AvoidEscapedUnicodeCharacters'>\\n    <property name='allowByTailComment' value='false'/>\\n    <property name='allowEscapesForControlCharacters' value='false'/>\\n    <property name='allowIfAllCharactersEscaped' value='false'/>\\n    <property name='allowNonPrintableEscapes' value='false'/>\\n</module>\"\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AvoidEscapedUnicodeCharacters'>\\n    <property name='allowByTailComment' value='true'/>\\n    <property name='allowEscapesForControlCharacters' value='true'/>\\n    <property name='allowIfAllCharactersEscaped' value='false'/>\\n    <property name='allowNonPrintableEscapes' value='true'/>\\n</module>\"\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='PackageDeclaration'>\n    </module>\n    <module name='OneTopLevelClass'>\n    </module>\n    <module name='EmptyLineSeparator'>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF'/>\n    </module>\"\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='RegexpHeader'>\\n    <property name='header' value='^.*(license|copyright).*$'/>\\n</module>\"\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='PackageDeclaration'>\\n</module>\\n<module name='NoLineWrap'>\\n    <property name='tokens' value='PACKAGE_DEF'/>\\n</module>\"\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidStarImport'>\n        <property name='allowClassImports' value='false'/>\n        <property name='allowStaticMemberImports' value='false'/>\n    </module>\n    <module name='AvoidStaticImport'/>\n    <module name='ImportOrder'>\n        <property name='option' value='top'/>\n        <property name='groups' value='java, javax, org, com'/>\n        <property name='ordered' value='true'/>\n        <property name='separated' value='true'/>\n        <property name='sortStaticImportsAlphabetically' value='true'/>\n    </module>\"\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='IMPORT'/>\n    </module>\"\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CustomImportOrder'>\n        <property name='customImportOrderRules' value='STATIC###SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###SAME_PACKAGE'/>\n        <property name='separateLineBetweenGroups' value='true'/>\n        <property name='sortImportsInGroupAlphabetically' value='true'/>\n        <property name='specialImportsRegExp' value='^javax?\\\\.'/>\n        <property name='standardPackageRegExp' value='^java\\\\.'/>\n        <property name='thirdPartyPackageRegExp' value='^(?!java|javax)\\\\w+\\\\.'/>\n    </module>\"\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidStaticImport'>\n        <property name='excludes' value=''/>\n    </module>\"\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='OneTopLevelClass'/>\n    <module name='OuterTypeFilename'/>\"\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='DeclarationOrder'>\n        <property name='ignoreConstructors' value='false'/>\n        <property name='ignoreModifiers' value='false'/>\n    </module>\n    <module name='InnerTypeLast'/>\n    <module name='OverloadMethodsDeclarationOrder'/>\"\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='forceStrictCondition' value='true'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NeedBraces'>\n        <property name='allowEmptyLoopBody' value='true'/>\n        <property name='allowSingleLineStatement' value='false'/>\n        <property name='tokens' value='LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_DO, LITERAL_WHILE'/>\n    </module>\"\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LeftCurly'>\n        <property name='option' value='NL'/>\n    </module>\n    <module name='RightCurly'>\n        <property name='option' value='NL'/>\n    </module>\"\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='text'/>\n    </module>\"\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n    </module>\n    <module name='CommentsIndentation'>\n        <property name='tokens' value='SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN'/>\n    </module>\"\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneStatementPerLine'>\n        <property name='treatTryResourcesAsStatement' value='true'/>\n    </module>\"\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LineLength'>\n        <property name='max' value='100'/>\n        <property name='ignorePattern' value='^.*(package|import|//|/\\*|\\*|@|http|https|ftp|mailto|file|data|javascript|about|chrome|chrome-extension|moz-extension|opera|safari-extension|ms-browser-extension|urn|tel|sms|geo|magnet|bitcoin|ethereum|blockchain|ipfs|ipns|dweb|dweb:|dweb:/|dweb://|dweb:/ipfs|dweb:/ipns|dweb:/ipld|dweb:/dns|dweb:/dnslink|dweb:/dweb|dweb:/dweb:/|dweb:/dweb://|dweb:/dweb:/ipfs|dweb:/dweb:/ipns|dweb:/dweb:/ipld|dweb:/dweb:/dns|dweb:/dweb:/dnslink|dweb:/dweb:/dweb|dweb:/dweb:/dweb:/|dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb://|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipfs|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/ipld|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dns|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dnslink|dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb:/dweb", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='forceStrictCondition' value='false'/>\n        <property name='lineWrappingIndentation' value='8'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='PLUS, MINUS, DIV, STAR, MOD, SR, BSR, SL, BXOR, BOR, BAND, LOR, LAND, EQUAL, NOT_EQUAL, LT, GT, LE, GE, LITERAL_INSTANCEOF'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF, TYPE_EXTENSION_AND, TYPE_EXTENSION_OR, LITERAL_CATCH, LITERAL_FOR'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='ASSIGN, COLON, COMMA, LPAREN, LAMBDA'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF'/>\n    </module>\"\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='forceStrictCondition' value='false'/>\n    </module>\"\n}", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='true'/>\n        <property name='allowNoEmptyLineBetweenFields' value='true'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT'/>\n    </module>\"\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAround'>\n        <property name='tokens' value='ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN'/>\n    </module>\n    <module name='WhitespaceAfter'>\n        <property name='tokens' value='COMMA, SEMI, TYPECAST'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n    </module>\n    <module name='WhitespaceAround'>\n        <property name='tokens' value='LITERAL_IF, LITERAL_FOR, LITERAL_WHILE'/>\n   ", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"No\",\n    \"Configuration\": \"\"\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='UnnecessaryParentheses'>\n        <property name='tokens' value='EXPR, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_CATCH, LITERAL_TRY, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_DEFAULT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_VAR, LITERAL_CONST, LITERAL_GOTO, LITERAL_PACKAGE, LITERAL_IMPORT, LITERAL_STATIC, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC, LITERAL_PROTECTED, LITERAL_PRIVATE, LITERAL_SYNCHRONIZED, LITERAL_DEFAULT, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_NATIVE, LITERAL_STRICTFP, LITERAL_ABSTRACT, LITERAL_FINAL, LITERAL_PUBLIC,", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoEnumTrailingComma'/>\n    <module name='UnnecessarySemicolonInEnumeration'/>\n    <module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='8'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n        <property name='forceStrictCondition' value='true'/>\n    </module>\"\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='true'/>\n    </module>\n    <module name='NoWhitespaceBeforeCaseDefaultColon'/>\n    <module name='DefaultComesLast'/>\n    <module name='Indentation'>\n        <property name='caseIndent' value='4'/>\n    </module>\"\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='CommentsIndentation'>\n        <property name='tokens' value='SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN, BLOCK_COMMENT_END'/>\n    </module>\n    <module name='TrailingComment'>\n        <property name='format' value='.*'/>\n        <property name='legalComment' value='.*'/>\n    </module>\"\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='CommentsIndentation'>\n        <property name='tokens' value='BLOCK_COMMENT_BEGIN, BLOCK_COMMENT_END, COMMENT_CONTENT, COMMENT_CONTENT_INDENTED, COMMENT_CONTENT_INDENTED_END, COMMENT_CONTENT_END, COMMENT_CONTENT_END_INDENTED, COMMENT_CONTENT_INDENTED_END_INDENTED, COMMENT_CONTENT_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END, COMMENT_CONTENT_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED_END_INDENTED", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ModifierOrder'>\n    </module>\"\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='UpperEll'>\n    </module>\"\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='LambdaParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='InterfaceTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='TypeName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='RecordComponentName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MemberName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MethodTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='CatchParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='ParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='LocalVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='MethodName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='ConstantName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='StaticVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='RecordTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='PatternVariableName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='ClassTypeParameterName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\n    <module name='IllegalIdentifierName'>\n        <property name='format' value='\\\\w+'/>\n    </module>\"\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='PackageName'>\n        <property name='format' value='^[a-z0-9]+(\\\\.[a-z0-9]+)*$'/>\n    </module>\"\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, RECORD_DEF'/>\n    </module>\n    <module name='RegexpOnFilename'>\n        <property name='fileNamePattern' value='^.*Test\\\\.java$'/>\n        <property name='match' value='true'/>\n    </module>\"\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]*)*$'/>\n    </module>\"\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n    </module>\"\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MemberName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='accessModifiers' value='public, protected, package, private'/>\n    </module>\n    <module name='OneCharacterParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreOverridden' value='true'/>\n    </module>\"\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ClassTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\n    <module name='InterfaceTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\n    <module name='MethodTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\n    <module name='RecordTypeParameterName'>\n        <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n    </module>\"\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='applyToPublic' value='true'/>\n        <property name='applyToProtected' value='true'/>\n        <property name='applyToPackage' value='true'/>\n        <property name='applyToPrivate' value='true'/>\n    </module>\n    <module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='applyToPublic' value='true'/>\n        <property name='applyToProtected' value='true'/>\n        <property name='applyToPackage' value='true'/>\n        <property name='applyToPrivate' value='true'/>\n    </module>\n    <module name='MemberName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='applyToPublic' value='true'/>\n        <property name='applyToProtected' value='true'/>\n        <property name='applyToPackage' value='true'/>\n        <property name='applyToPrivate' value='true'/>\n    </module>\n    <module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='accessModifiers' value='public, protected, package, private'/>\n    </module>\n    <module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowOneCharVarInForLoop' value='true'/>\n    </module>\n    <module name='RecordComponentName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n    </module>\"\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='EmptyCatchBlock'>\\n    <property name='commentFormat' value='^\\\\s*//.*$'/>\\n    <property name='exceptionVariableName' value='^expected.*$'/>\\n</module>\"\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='RequireThis'>\n        <property name='checkFields' value='true'/>\n        <property name='checkMethods' value='true'/>\n        <property name='validateOnlyOverlapping' value='false'/>\n    </module>\"\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoFinalizer'>\n    </module>\"\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocStyle'>\n        <property name='checkEmptyJavadoc' value='true'/>\n        <property name='checkFirstSentence' value='true'/>\n        <property name='checkHtml' value='true'/>\n    </module>\n    <module name='SingleLineJavadoc'>\n        <property name='ignoreInlineTags' value='true'/>\n        <property name='ignoredTags' value='@return'/>\n    </module>\"\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocParagraph'>\n        <property name='allowNewlineParagraph' value='false'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\n    <module name='RequireEmptyLineBeforeBlockTagGroup'>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\"\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AtclauseOrder'>\n        <property name='tagOrder' value='param, return, throws, deprecated'/>\n        <property name='target' value='METHOD_DEF, CTOR_DEF'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\n    <module name='NonEmptyAtclauseDescription'>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n        <property name='javadocTokens' value='PARAM_RETURN_THROWS_DEPRECATED'/>\n    </module>\n    <module name='JavadocTagContinuationIndentation'>\n        <property name='offset' value='4'/>\n        <property name='violateExecutionOnNonTightHtml' value='true'/>\n    </module>\"\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='SummaryJavadoc'>\n        <property name='forbiddenSummaryFragments' value='A{@code Foo} is a..., This method returns..., Save the record.'/>\n        <property name='period' value='.'/>\n    </module>\n    <module name='JavadocStyle'>\n        <property name='checkEmptyJavadoc' value='true'/>\n        <property name='checkFirstSentence' value='true'/>\n        <property name='checkHtml' value='true'/>\n        <property name='endOfSentenceFormat' value='[.?!]([ \\t\\n\\r\\f<])'/>\n        <property name='scope' value='public'/>\n    </module>\"\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocType'>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='private, package'/>\n    </module>\n    <module name='JavadocMethod'>\n        <property name='accessModifiers' value='public, protected'/>\n    </module>\"\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingJavadocMethod'>\n        <property name='allowMissingPropertyJavadoc' value='true'/>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='private'/>\n        <property name='ignoreMethodNamesRegex' value='^get[A-Z].*'/>\n    </module>\"\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingJavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='excludeScope' value='protected, package, private'/>\n        <property name='allowedAnnotations' value='Override'/>\n    </module>\"\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocVariable'>\n        <property name='excludeScope' value='private'/>\n        <property name='ignoreNamePattern' value='^log$'/>\n        <property name='scope' value='public, protected, package'/>\n        <property name='tokens' value='VARIABLE_DEF'/>\n    </module>\n    <module name='MissingJavadocMethod'>\n        <property name='allowMissingPropertyJavadoc' value='true'/>\n        <property name='allowedAnnotations' value='Override, Test'/>\n        <property name='excludeScope' value='private'/>\n        <property name='ignoreMethodNamesRegex' value='^get[A-Z].*|set[A-Z].*'/>\n        <property name='minLineCount' value='5'/>\n        <property name='scope' value='public, protected, package'/>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF'/>\n    </module>\n    <module name='MissingJavadocType'>\n        <property name='excludeScope' value='private'/>\n        <property name='scope' value='public, protected, package'/>\n        <property name='skipAnnotations' value='Generated, SuppressWarnings'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF'/>\n    </module>\"\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \"<module name='AnnotationLocation'>\\n    <property name='allowSamelineMultipleAnnotations' value='false'/>\\n    <property name='allowSamelineParameterizedAnnotation' value='false'/>\\n    <property name='allowSamelineSingleParameterlessAnnotation' value='false'/>\\n    <property name='tokens' value='TYPE_USE'/>\\n</module>\"\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSamelineMultipleAnnotations' value='false'/>\n        <property name='allowSamelineParameterizedAnnotation' value='false'/>\n        <property name='allowSamelineSingleParameterlessAnnotation' value='false'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF'/>\n    </module>\"\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='AnnotationLocation'>\n        <property name='allowSamelineSingleParameterlessAnnotation' value='true'/>\n    </module>\"\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSamelineMultipleAnnotations' value='true'/>\n        <property name='tokens' value='FIELD_DEF'/>\n    </module>\"\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"No\",\n    \"Configuration\": \"\"\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OverloadMethodsDeclarationOrder'/>\n    \"\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MultipleVariableDeclarations'>\n    </module>\"\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='VariableDeclarationUsageDistance'>\n        <property name='allowedDistance' value='1'/>\n        <property name='ignoreFinal' value='true'/>\n        <property name='ignoreVariablePattern' value='^ignoredVar$'/>\n        <property name='validateBetweenScopes' value='true'/>\n    </module>\"\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='forceStrictCondition' value='false'/>\n        <property name='lineWrappingIndentation' value='8'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='javaStyle' value='true'/>\n    </module>\"\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n    </module>\n    <module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='true'/>\n    </module>\"\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='false'/>\n        <property name='reliefPattern' value='fall[ -]?through'/>\n    </module>\"\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MissingSwitchDefault'>\n    </module>\n    <module name='FallThrough'>\n        <property name='checkLastCaseGroup' value='true'/>\n    </module>\"\n}"}