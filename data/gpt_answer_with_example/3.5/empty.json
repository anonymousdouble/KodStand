{
    "2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='FileContents'>\n                <property name='charset' value='UTF-8'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\t'/>\n                <property name='message' value='Tab characters are not allowed for indentation.'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\b'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\t'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\n'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\f'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\r'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\\\\"'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\\\'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='\\\\\\\\'/>\n                <property name='message' value='Use special escape sequence'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSinglelineJavaCheck'>\n                <property name='format' value='[^\\\\p{ASCII}]'/>\n                <property name='message' value='Non-ASCII characters should be either actual Unicode characters or Unicode escapes.'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='^\\\\s*$'/>\n                <property name='message' value='Empty line required between sections'/>\n                <property name='ignoreFormat' value='true'/>\n                <property name='fileExtensions' value='java'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.1 License or copyright information, if present": "{\n    \"Answer\": \"No\"\n}",
    "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='PackageDeclaration'>\n                <property name='id' value='PackageDeclaration'/>\n                <property name='option' value='not-wrapped'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AvoidStarImport'>\n                <property name='id' value='com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImport'/>\n                <property name='severity' value='warning'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ImportControl'>\n                <property name='option' value='single'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='CustomImportOrder'>\n                <property name='staticFirst' value='true'/>\n                <property name='separated' value='true'/>\n                <property name='option' value='abc'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AvoidStaticImport'>\n                <property name='id' value='AvoidStaticImport'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='OuterTypeFilename'>\n                <property name='id' value='OuterTypeFilename'/>\n                <property name='severity' value='warning'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"No\"\n}",
    "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='NeedBraces'>\n                <property name='allowSingleLineStatement' value='false'/>\n                <property name='allowEmptyLoopBody' value='false'/>\n                <property name='tokens' value='LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='NeedBraces'>\n                <property name='allowSingleLineStatement' value='false'/>\n                <property name='allowEmptyLoopBody' value='false'/>\n                <property name='tokens' value='LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyBlock'>\n                <property name='option' value='TEXT'/>\n                <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, SEMI, METHOD_DEF, CTOR_DEF, CLASS_DEF, LITERAL_STATIC, LITERAL_DEFAULT, LITERAL_CASE'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyBlock'>\n                <property name='option' value='concise'/>\n                <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_TRY'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"No\"\n}",
    "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='OneStatementPerLine'>\n                <property name='id' value='OneStatementPerLine'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='LineLength'>\n                <property name='max' value='100'/>\n                <property name='ignorePattern' value='^import .*|^package .*|.*URL.*|.*JSNI.*|.*shell.*|.*google-java-format.*'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.5 Line-wrapping": "{\n    \"Answer\": \"No\"\n}",
    "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='LineLength'>\n                <property name='max' value='120'/>\n                <property name='ignorePattern' value='^.*\\\\*.*$'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='Indentation'>\n                <property name='basicOffset' value='4'/>\n                <property name='braceAdjustment' value='0'/>\n                <property name='caseIndent' value='4'/>\n                <property name='throwsIndent' value='4'/>\n                <property name='lineWrappingIndentation' value='4'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyLineSeparator'>\n                <property name='allowMultipleEmptyLines' value='true'/>\n                <property name='allowSingleEmptyLine' value='true'/>\n                <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='^\\s*(if|for|catch|while|switch)\\s*\\(.*'/>\n                <property name='message' value='Missing space after reserved word'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\}\\s*(else|catch)\\s*.*'/>\n                <property name='message' value='Missing space before reserved word'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\s[=!<>]=\\s.*'/>\n                <property name='message' value='Missing space around binary operator'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\s[&|?:]\\s.*'/>\n                <property name='message' value='Missing space around operator-like symbol'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\s[.,;:]\\s.*'/>\n                <property name='message' value='Missing space after punctuation'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\s//.*'/>\n                <property name='message' value='Missing space before comment'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*@.*\\(\\{.*\\}.*\\).*'/>\n                <property name='message' value='No space should be used in annotation with array initializer'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='.*\\[\\].*'/>\n                <property name='message' value='Space should be used between type annotation and []'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreStringLiterals' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyBlock'>\n                <property name='option' value='text'/>\n                <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH, LITERAL_WHILE, LITERAL_FOR, LITERAL_DO'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ParenPad'>\n                <property name='option' value='always'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyLineSeparator'>\n                <property name='allowMultipleEmptyLines' value='false'/>\n                <property name='allowSingleEmptyLine' value='true'/>\n                <property name='tokens' value='ENUM_CONSTANT_DEF'/>\n            </module>\n            <module name='EmptyLineSeparator'>\n                <property name='allowMultipleEmptyLines' value='false'/>\n                <property name='allowSingleEmptyLine' value='true'/>\n                <property name='tokens' value='ENUM_CONSTANT_DEF'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AvoidStarImport'>\n                <property name='id' value='com.puppycrawl.tools.checkstyle.checks.coding.AvoidStarImportCheck'/>\n                <property name='severity' value='warning'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.6 Comments": "{\n    \"Answer\": \"No\"\n}",
    "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='\\/\\/.*'/>\n                <property name='message' value='Single line comments should use // style'/>\n                <property name='ignoreFormat' value='false'/>\n            </module>\n            <module name='RegexpMultiline'>\n                <property name='format' value='\\/\\*.*\\*\\/'/>\n                <property name='message' value='Block comments should use /* ... */ style'/>\n                <property name='ignoreFormat' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='ModifierOrder'>\n            <property name='id' value='ModifierOrder'/>\n            <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF'/>\n            <property name='option' value='public, protected, private, abstract, default, static, final, transient, volatile, synchronized, native, strictfp'/>\n        </module>\n    </module>\"\n}",
    "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSinglelineJavaCheck'>\n                <property name='format' value='^[0-9]+L$'/>\n                <property name='message' value='Numeric literals should use uppercase L suffix'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreCase' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"No\"\n}",
    "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='^[a-z0-9]+(\\\\.[a-z0-9]+)*$'/>\n                <property name='message' value='Package names should use only lowercase letters and digits (no underscores)'/>\n                <property name='ignoreComments' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n                <property name='message' value='Class names should be in UpperCamelCase'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreAnnotation' value='true'/>\n            </module>\n            <module name='RegexpSingleline'>\n                <property name='format' value='.*Test$'/>\n                <property name='message' value='Test class names should end with Test'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreAnnotation' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='MethodName'>\n                <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n                <property name='allowJUnit4StyleTestMethods' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ConstantName'>\n                <property name='format' value='UPPER_SNAKE_CASE'/>\n                <property name='ignoreModifiers' value='true'/>\n                <property name='allowMutableConstants' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='MemberName'>\n                <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n                <property name='ignoreStatic' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ParameterName'>\n                <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n                <property name='allowOneCharacterParameterNames' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='LocalVariableName'>\n                <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n                <property name='ignoreFinal' value='false'/>\n                <property name='ignoreCase' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSinglelineJava'>\n                <property name='format' value='^[A-Z]$|^[A-Z][0-9]$|^[a-zA-Z]+T$'/>\n                <property name='message' value='Type variable names must follow the specified convention.'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreCase' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='RegexpSingleline'>\n                <property name='format' value='^[a-z]+[a-zA-Z0-9]*$'/>\n                <property name='message' value='Variable name does not follow camel case convention'/>\n                <property name='ignoreComments' value='true'/>\n                <property name='ignoreCase' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyCatchBlock'>\n                <property name='exceptionVariableName' value='ok'/>\n            </module>\n            <module name='EmptyCatchBlock'>\n                <property name='exceptionVariableName' value='expected'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "6.3 Static members: qualified using class": "{\n    \"Answer\": \"No\"\n}",
    "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='Finalizer'>\n            <property name='severity' value='warning'/>\n            <property name='tokens' value='CLASS_DEF'/>\n        </module>\n    </module>\"\n}",
    "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Checker'>\n        <module name='JavadocStyle'>\n            <property name='basicFormat' value='true'/>\n            <property name='singleLineBasicFormat' value='true'/>\n            <property name='allowSingleLineTags' value='false'/>\n        </module>\n    </module>\"\n}",
    "7.1.2 Paragraphs": "{\n    \"Answer\": \"No\"\n}",
    "7.1.3 Block tags": "{\n    \"Answer\": \"No\"\n}",
    "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='JavadocStyle'>\n            <module name='SummaryJavadoc'>\n                <property name='format' value='^([A-Z][a-zA-Z0-9]*|[A-Z][a-zA-Z0-9]* [a-z0-9]+|[A-Z][a-zA-Z0-9]* [a-z0-9]+ [a-z0-9]+)\\.$'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='JavadocPackage'>\n            <property name='id' value='JavadocPackage'/>\n            <property name='scope' value='public'/>\n        </module>\n        <module name='JavadocMethod'>\n            <property name='id' value='JavadocMethod'/>\n            <property name='scope' value='public,protected'/>\n        </module>\n    </module>\"\n}",
    "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"No\"\n}",
    "7.3.2 Exception: overrides": "{\n    \"Answer\": \"No\"\n}",
    "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='JavadocStyle'>\n            <property name='scope' value='non-required'/>\n        </module>\n    </module>\"\n}",
    "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AnnotationUseStyle'>\n                <property name='id' value='annotation_use_style'/>\n                <property name='allowTypeUseAnnotations' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AnnotationLocation'>\n                <property name='id' value='com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck'/>\n                <property name='tokens' value='CLASS_DEF'/>\n                <property name='format' value='separateLine'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AnnotationLocation'>\n                <property name='id' value='AnnotationLocation'/>\n                <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\n                <property name='format' value='separateLine'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='AnnotationLocation'>\n                <property name='id' value='4.8.5.4'/>\n                <property name='tokens' value='VARIABLE_DEF'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"No\"\n}",
    "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"No\"\n}",
    "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='MultipleVariableDeclarations'>\n                <property name='allowForLoop' value='true'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='LocalVariableDeclaration'>\n                <property name='scope' value='block'/>\n                <property name='option' value='ignore'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ArrayInit'>\n                <property name='option' value='block'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='ArrayTypeStyle'>\n                <property name='id' value='ArrayTypeStyle'/>\n                <property name='allowCStyleArrayDeclaration' value='false'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='Indentation'>\n                <property name='basicOffset' value='2'/>\n                <property name='caseIndent' value='2'/>\n                <property name='throwsIndent' value='2'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptyBlock'>\n                <property name='option' value='text'/>\n                <property name='tokens' value='LITERAL_CASE, LITERAL_DEFAULT'/>\n            </module>\n        </module>\n    </module>\"\n}",
    "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Checker'>\n        <module name='TreeWalker'>\n            <module name='EmptySwitch'>\n                <property name='option' value='default'/>\n            </module>\n        </module>\n    </module>\"\n}"
}