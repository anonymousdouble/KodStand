{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FileTabCharacter'>\n        <property name='eachLine' value='true'/>\n    </module>\"\n}", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='WhitespaceAround'>\n        <property name='tokens' value='ASSIGN, EQUAL, NOT_EQUAL'/>\n    </module>\"\n}", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidEscapedUnicodeCharacters'>\n        <property name='allowEscapes' value='false'/>\n    </module>\"\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AvoidEscapedUnicodeCharacters'>\n        <property name='allowOutsideString' value='false'/>\n    </module>\"\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n    </module>\n    <module name='OneTopLevelClass'>\n        <property name='id' value='OneTopLevelClass'/>\n    </module>\"\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='PackageDeclaration'>\n        <property name='id' value='PackageDeclaration'/>\n        <property name='option' value='required'/>\n    </module>\"\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='PACKAGE_DEF'/>\n    </module>\"\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoWildcardImports'/>\n    \"\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='IMPORT'/>\n    </module>\"\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='CustomImportOrder'>\n        <property name='customImportOrder' value='static-first'/>\n    </module>\"\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='AvoidStaticImport'>\n        <property name='id' value='AvoidStaticImport'/>\n    </module>\"\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneTopLevelClass'/>\"\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='DeclarationOrder'>\n        <property name='option' value='public, protected, private, static, final, transient, volatile, synchronized, native, abstract, strictfp'/>\n    </module>\"\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n    </module>\"\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='TEXT'/>\n        <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR'/>\n    </module>\n    <module name='EmptyBlock'>\n        <property name='option' value='TEXT'/>\n        <property name='tokens' value='STATIC_INIT, INSTANCE_INIT'/>\n    </module>\n    <module name='EmptyBlock'>\n        <property name='option' value='TEXT'/>\n        <property name='tokens' value='LITERAL_SYNCHRONIZED'/>\n    </module>\"\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='LeftCurly'>\n        <property name='option' value='nl'/>\n        <property name='tokens' value='CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT'/>\n    </module>\"\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyBlock'>\n        <property name='option' value='concise'/>\n    </module>\"\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n        <property name='lineWrappingIndentation' value='2'/>\n    </module>\"\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OneStatementPerLine'>\n        <property name='id' value='OneStatementPerLine'/>\n        <property name='allowSingleLineBlocks' value='false'/>\n        <property name='allowSingleLineStatement' value='false'/>\n    </module>\"\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='LineLength'>\n        <property name='max' value='100'/>\n        <property name='ignorePattern' value='^import\\\\s.*|^package\\\\s.*|^\\\\s*\\\\/\\\\/\\\\s*\\\\S+\\\\s*$'/>\n    </module>\"\n}", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='NoLineWrap'>\n        <property name='tokens' value='METHOD_DEF, CTOR_DEF, LITERAL_NEW, LITERAL_STRING, LITERAL_CATCH, LITERAL_IF, LITERAL_WHILE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_THROW, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_ASSERT, LITERAL_SUPER, LITERAL_THIS, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_TRY, LITERAL_FINALLY, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_C", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='EQUAL, NOT_EQUAL'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='COMMA, LPAREN'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='CTOR_DEF'/>\n    </module>\"\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='4'/>\n        <property name='braceAdjustment' value='0'/>\n        <property name='caseIndent' value='4'/>\n        <property name='throwsIndent' value='4'/>\n        <property name='lineWrappingIndentation' value='4'/>\n        <property name='arrayInitIndent' value='4'/>\n        <property name='typecastIndent' value='4'/>\n        <property name='arrayInitWrap' value='false'/>\n        <property name='lineWrapping' value='false'/>\n    </module>\"\n}", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='true'/>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, VARIABLE_DEF, CTOR_DEF, METHOD_DEF, STATIC_INIT, INSTANCE_INIT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF'/>\n    </module>\n    <module name='EmptyLineSeparator'>\n        <property name='allowMultipleEmptyLines' value='false'/>\n        <property name='tokens' value='VARIABLE_DEF'/>\n    </module>\"\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='OperatorWrap'>\n        <property name='option' value='NL'/>\n        <property name='tokens' value='EQUAL, NOT_EQUAL'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapNL'/>\n        <property name='tokens' value='DOT, METHOD_REF'/>\n        <property name='option' value='nl'/>\n    </module>\n    <module name='SeparatorWrap'>\n        <property name='id' value='SeparatorWrapEOL'/>\n        <property name='tokens' value='COMMA, LPAREN'/>\n        <property name='option' value='EOL'/>\n    </module>\n    <module name='MethodParamPad'>\n        <property name='allowLineBreaks' value='true'/>\n        <property name='option' value='space'/>\n        <property name='tokens' value='CTOR_DEF'/>\n    </module>\"\n}", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='WhitespaceAfter'>\n        <property name='tokens' value='DOT, COMMA, SEMI, LITERAL_NEW, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE, LITERAL_DO, LITERAL_TRY, LITERAL_IF, LITERAL_FOR, LITERAL_WHILE, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_RETURN, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_THROW, LITERAL_ASSERT, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_THIS, LITERAL_SUPER, TYPECAST, POST_INC, POST_DEC, METHOD_CALL, ARRAY_DECLARATOR, INDEX_OP, QUESTION, LAMBDA, LITERAL_INSTANCEOF, AT, UNARY_PLUS, UNARY_MINUS, NOT, LNOT, LITERAL_TRUE, LITERAL_FALSE, LITERAL_NULL'/>\n    </module>\"\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='UnnecessaryParentheses'>\n        <property name='option' value='ignore'/>\n    </module>\"\n}", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='NoEnumTrailingComma'/>\"\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FallThrough'>\n        <property name='option' value='error'/>\n    </module>\"\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Comments'>\n        <property name='id' value='Comments'/>\n        <property name='format' value='ALLOWED'/>\n        <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, STATIC_INIT, INSTANCE_INIT, ENUM_CONSTANT_DEF, LABELED_STAT, CASE_GROUP, SWITCH_BLOCK_LABEL, GENERIC_START, GENERIC_END, ENUM_CONSTANT_DEF, RECORD_DEF, RECORD_COMPONENT_DEF'/>\n    </module>\"\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='CommentsIndentation'>\n        <property name='eachLine' value='true'/>\n        <property name='option' value='indent'/>\n        <property name='tokens' value='BLOCK_COMMENT, LINE_COMMENT'/>\n    </module>\"\n}", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='ModifierOrder'>\n        <property name='id' value='ModifierOrder'/>\n        <property name='tokens' value='PUBLIC, PROTECTED, PRIVATE, ABSTRACT, DEFAULT, STATIC, FINAL, TRANSIENT, VOLATILE, SYNCHRONIZED, NATIVE, STRICTFP'/>\n    </module>\"\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='UpperEll'>\n        <property name='id' value='UpperEll'/>\n        <property name='format' value='^[0-9]+L$'/>\n    </module>\"\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='id' value='methodname'/>\n        <property name='severity' value='warning'/>\n    </module>\"\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    <module name=\"PackageName\">\n        <property name=\"format\" value=\"^[a-z0-9]+(\\\\.[a-z0-9]+)*$\"/>\n        <property name=\"illegalFormat\" value=\"^[A-Z]|_\"/>\n        <property name=\"message\" value=\"Package name must be in lowercase and not contain underscores\"/>\n    </module>\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='id' value='methodName'/>\n        <property name='severity' value='warning'/>\n    </module>\"\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='UPPER_SNAKE_CASE'/>\n        <property name='allowMutableConstants' value='false'/>\n    </module>\"\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ConstantName'>\n        <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='ParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowOneCharacterParameterNames' value='false'/>\n    </module>\"\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='LocalVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='false'/>\n    </module>\"\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeName'>\n        <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\n    <module name='TypeName'>\n        <property name='format' value='^[a-zA-Z][a-zA-Z0-9]*T$'/>\n        <property name='ignoreCase' value='false'/>\n    </module>\"\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MethodName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='allowunderscores' value='false'/>\n    </module>\"\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='EmptyCatchBlock'>\n        <property name='severity' value='warning'/>\n    </module>\"\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='StaticVariableName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreFinal' value='true'/>\n    </module>\"\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SuperFinalize'>\n        <property name='id' value='superFinalize'/>\n        <property name='tokens' value='METHOD_DEF'/>\n    </module>\"\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='SingleLineJavadoc'>\n        <property name='allowBlockTags' value='false'/>\n    </module>\"\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocParagraph'>\n        <property name='allowEmptyParagraphs' value='true'/>\n        <property name='allowSingleParagraph' value='true'/>\n        <property name='allowMultipleParagraphs' value='true'/>\n        <property name='allowParagraphTags' value='true'/>\n    </module>\"\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocBlockTagLocation'>\n        <property name='allowAtColumn' value='true'/>\n        <property name='allowAfterColumn' value='true'/>\n        <property name='allowBeforeColumn' value='true'/>\n        <property name='allowAfterBlockTag' value='true'/>\n        <property name='allowAfterDescription' value='true'/>\n        <property name='allowAfterParamName' value='true'/>\n        <property name='allowAfterType' value='true'/>\n        <property name='allowBeforeBlockTag' value='true'/>\n        <property name='allowBeforeDescription' value='true'/>\n        <property name='allowBeforeParamName' value='true'/>\n        <property name='allowBeforeType' value='true'/>\n        <property name='allowEmptyDescription' value='false'/>\n        <property name='allowMultipleInlineTags' value='false'/>\n        <property name='id' value='JavadocBlockTagLocation'/>\n    </module>\"\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='SummaryJavadoc'>\n        <property name='forbiddenSummaryFragments' value='A{@codeFoo}isa..., Thismethodreturns..., Savetherecord.'/>\n        <property name='allowSingleSentence' value='true'/>\n    </module>\"\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='JavadocType'>\n        <property name='scope' value='public'/>\n    </module>\n    <module name='JavadocVariable'>\n        <property name='scope' value='public'/>\n    </module>\n    <module name='JavadocMethod'>\n        <property name='scope' value='public'/>\n    </module>\"\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocMethod'>\n        <property name='scope' value='public'/>\n        <property name='allowMissingJavadoc' value='false'/>\n        <property name='allowMissingJavadocReturn' value='false'/>\n    </module>\"\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='MissingOverride'>\n        <property name='id' value='missingOverride'/>\n    </module>\"\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='JavadocVariable'>\n        <property name='scope' value='private'/>\n    </module>\"\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='TypeUseAnnotations'>\n        <property name='id' value='TypeUseAnnotations'/>\n        <property name='annotation' value='Nullable'/>\n    </module>\"\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='AnnotationLocation'>\n        <property name='allowSameline' value='true'/>\n        <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF'/>\n    </module>\"\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MethodTypeParameterName'>\n        <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        <property name='ignoreCase' value='true'/>\n    </module>\"\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FieldAnnotations'>\n        <property name='id' value='FieldAnnotations'/>\n        <property name='format' value='MULTIPLE'/>\n        <property name='tokens' value='VARIABLE_DEF'/>\n    </module>\"\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"No\"\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='OverloadMethodsDeclarationOrder'>\n        <property name='id' value='overloadMethodsDeclarationOrder'/>\n        <property name='sameName' value='true'/>\n        <property name='sameNameText' value='Methods of a class that share the same name appear in a single contiguous group with no other members in between.'/>\n    </module>\"\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='MultipleVariableDeclarations'/>\"\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FinalLocalVariable'>\n        <property name='id' value='finalLocalVariable'/>\n        <property name='tokens' value='VARIABLE_DEF'/>\n    </module>\"\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='allowNewlineArrayInMethodDeclaration' value='true'/>\n        <property name='allowNewlineArrayInMethodCall' value='true'/>\n        <property name='allowNewlineArrayInFieldDeclaration' value='true'/>\n    </module>\"\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='ArrayTypeStyle'>\n        <property name='allowCStyleArrayDeclaration' value='false'/>\n    </module>\"\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='Indentation'>\n        <property name='basicOffset' value='2'/>\n        <property name='caseIndent' value='2'/>\n        <property name='throwsIndent' value='2'/>\n    </module>\"\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\":\n    \"<module name='FallThrough'>\n        <property name='commentFormat' value='// fall through'/>\n    </module>\"\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": \n    \"<module name='DefaultComesLast'>\n        <property name='id' value='defaultComesLast'/>\n    </module>\"\n}"}