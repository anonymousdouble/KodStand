{"2.2 File encoding: UTF-8": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FileTabCharacter'>\n            <property name='fileExtensions' value='java'/>\n            <property name='charset' value='UTF-8'/>\n        </module>\"\n    ]\n}", "2.3.1 Whitespace characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FileTabCharacter'>\n            <property name='severity' value='error'/>\n        </module>\",\n        \"<module name='SingleSpaceSeparator'>\n            <property name='severity' value='error'/>\n        </module>\"\n    ]\n}", "2.3.2 Special escape sequences": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='IllegalTokenText'>\n            <property name='tokens' value='STRING_LITERAL'/>\n            <property name='format' value='\\\\\\\\u[0-9a-fA-F]{4}'/>\n            <message key='illegal.token.text' value='Avoid using Unicode escape sequences for special characters.'/>\n        </module>\",\n        \"<module name='IllegalTokenText'>\n            <property name='tokens' value='STRING_LITERAL'/>\n            <property name='format' value='\\\\\\\\[0-3]?[0-7]{1,2}'/>\n            <message key='illegal.token.text' value='Avoid using octal escape sequences for special characters.'/>\n        </module>\"\n    ]\n}", "2.3.3 Non-ASCII characters": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AvoidEscapedUnicodeCharacters'>\n            <property name='allowEscapesForControlCharacters' value='true'/>\n            <property name='allowEscapesForNonPrintableCharacters' value='true'/>\n        </module>\"\n    ]\n}", "3 Source file structure": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n            <property name='id' value='PackageDeclaration'/>\n        </module>\",\n        \"<module name='OneTopLevelClass'>\n            <property name='id' value='OneTopLevelClass'/>\n        </module>\",\n        \"<module name='EmptyLineSeparator'>\n            <property name='id' value='EmptyLineSeparator'/>\n            <property name='tokens' value='PACKAGE_DEF, IMPORT, CLASS_DEF'/>\n        </module>\"\n    ]\n}", "3.1 License or copyright information, if present": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='RegexpHeader'>\n            <property name='header' value='(license|copyright)'/>\n            <property name='severity' value='warning'/>\n        </module>\"\n    ]\n}", "3.2 Package statement": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageDeclaration'>\n            <property name='lineWrapping' value='false'/>\n        </module>\"\n    ]\n}", "3.3.1 No wildcard imports": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AvoidStarImport'>\n            <property name='id' value='AvoidStarImport'/>\n        </module>\",\n        \"<module name='AvoidStaticImport'>\n            <property name='id' value='AvoidStaticImport'/>\n        </module>\"\n    ]\n}", "3.3.2 No line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoLineWrap'>\n            <property name='id' value='NoLineWrap'/>\n        </module>\",\n        \"<module name='ImportOrder'>\n            <property name='id' value='ImportOrder'/>\n            <property name='option' value='top'/>\n            <property name='sortImportsInGroupAlphabetically' value='true'/>\n            <property name='groups' value='java,javax,org,com'/>\n        </module>\"\n    ]\n}", "3.3.3 Ordering and spacing": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='CustomImportOrder'>\n            <property name='sortStaticImportsAlphabetically' value='true'/>\n            <property name='sortImportsInGroupAlphabetically' value='true'/>\n            <property name='separateLineBetweenGroups' value='true'/>\n            <property name='customImportOrderRules' value='STATIC###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE'/>\n        </module>\",\n        \"<module name='ImportOrder'>\n            <property name='option' value='top'/>\n            <property name='groups' value='STATIC###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE'/>\n            <property name='ordered' value='true'/>\n        </module>\"\n    ]\n}", "3.3.4 No static import for classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AvoidStaticImport'>\n            <property name='id' value='avoidStaticImport'/>\n            <property name='illegalClasses' value='*'/>\n        </module>\"\n    ]\n}", "3.4.1 Exactly one top-level class declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OneTopLevelClass'>\n            <property name='id' value='OneTopLevelClass'/>\n        </module>\"\n    ]\n}", "3.4.2 Ordering of class contents": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='DeclarationOrder'>\n            <property name='id' value='declarationOrder'/>\n            <property name='order' value='public, protected, private, static, final, transient, volatile, synchronized, native, abstract, strictfp'/>\n        </module>\",\n        \"<module name='VisibilityModifier'>\n            <property name='id' value='visibilityModifier'/>\n            <property name='scope' value='protected'/>\n        </module>\"\n    ]\n}", "4 Formatting": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='4'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='caseIndent' value='4'/>\n            <property name='throwsIndent' value='4'/>\n            <property name='lineWrappingIndentation' value='4'/>\n        </module>\",\n        \"<module name='LeftCurly'>\n            <property name='option' value='eol'/>\n            <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, STATIC_INIT, INSTANCE_INIT, CLASS_DEF, METHOD_DEF, CTOR_DEF, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, ARRAY_INIT'/>\n        </module>\",\n        \"<module name='RightCurly'>\n            <property name='option' value='same'/>\n            <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, STATIC_INIT, INSTANCE_INIT, CLASS_DEF, METHOD_DEF, CTOR_DEF, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, LAMBDA, ARRAY_INIT'/>\n        </module>\"\n    ]\n}", "4.1.1 Use of optional braces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NeedBraces'>\n            <property name='option' value='always'/>\n        </module>\"\n    ]\n}", "4.1.2 Nonempty blocks: K & R style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LeftCurly'>\n            <property name='option' value='EOL'/>\n            <property name='ignoreEnums' value='true'/>\n        </module>\",\n        \"<module name='RightCurly'>\n            <property name='option' value='ALONE'/>\n            <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_STATIC_INIT, LITERAL_ARRAY_INIT, CLASS_DEF, METHOD_DEF, CTOR_DEF, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, ENUM_CONSTANT_DEF, INTERFACE_DEF, RECORD_DEF, COMPACT_CTOR_DEF'/>\n        </module>\"\n    ]\n}", "4.1.3 Empty blocks: may be concise": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyBlock'>\n            <property name='option' value='text'/>\n            <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY'/>\n        </module>\",\n        \"<module name='RightCurly'>\n            <property name='option' value='alone'/>\n            <property name='tokens' value='LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY'/>\n        </module>\"\n    ]\n}", "4.2 Block indentation: +2 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='2'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='caseIndent' value='2'/>\n            <property name='throwsIndent' value='2'/>\n            <property name='lineWrappingIndentation' value='2'/>\n        </module>\",\n        \"<module name='CommentsIndentation'>\n            <property name='basicOffset' value='2'/>\n        </module>\"\n    ]\n}", "4.3 One statement per line": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OneStatementPerLine'>\n            <property name='id' value='OneStatementPerLine'/>\n        </module>\"\n    ]\n}", "4.4 Column limit: 100": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LineLength'>\n            <property name='max' value='100'/>\n            <property name='ignorePattern' value='^.*(http|https|ftp|ftps)://.*$'/>\n        </module>\"\n    ]\n}", "4.5 Line-wrapping": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LineLength'>\n            <property name='max' value='80'/>\n        </module>\",\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='4'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='caseIndent' value='4'/>\n            <property name='throwsIndent' value='4'/>\n            <property name='lineWrappingIndentation' value='8'/>\n        </module>\",\n        \"<module name='OperatorWrap'>\n            <property name='option' value='NL'/>\n        </module>\",\n        \"<module name='SeparatorWrap'>\n            <property name='option' value='NL'/>\n        </module>\"\n    ]\n}", "4.5.1 Where to break": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OperatorWrap'>\n            <property name='option' value='NL_BEFORE'/>\n            <property name='tokens' value='PLUS, MINUS, DIV, STAR, MOD, SR, BSR, SL, BXOR, BOR, BAND, LOR, LAND, TYPE_EXTENSION_AND, TYPE_EXTENSION_OR, METHOD_REF, DOT'/>\n        </module>\",\n        \"<module name='SeparatorWrap'>\n            <property name='option' value='NL_BEFORE'/>\n            <property name='tokens' value='COMMA, SEMI, LAMBDA, METHOD_REF, DOT, TYPE_EXTENSION_AND, TYPE_EXTENSION_OR'/>\n        </module>\",\n        \"<module name='MethodParamPad'>\n            <property name='option' value='NL_AFTER'/>\n        </module>\",\n        \"<module name='LambdaBodyLength'>\n            <property name='max' value='1'/>\n        </module>\"\n    ]\n}", "4.5.2 Indent continuation lines at least +4 spaces": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='basicOffset' value='4'/>\n            <property name='lineWrappingIndentation' value='4'/>\n        </module>\"\n    ]\n}", "4.6.1 Vertical Whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyLineSeparator'>\n  <property name='allowMultipleEmptyLines' value='true'/>\n  <property name='tokens' value='CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, STATIC_INIT, INSTANCE_INIT, VARIABLE_DEF'/>\n</module>\"\n    ]\n}", "4.6.2 Horizontal whitespace": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='WhitespaceAround'>\n            <property name='tokens' value='ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND, TYPE_EXTENSION_OR, LAMBDA'/>\n        </module>\",\n        \"<module name='WhitespaceAfter'>\n            <property name='tokens' value='COMMA, SEMI, TYPECAST, COLON, LITERAL_CATCH, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE'/>\n        </module>\",\n        \"<module name='WhitespaceAround'>\n            <property name='tokens' value='LITERAL_CATCH, LITERAL_ELSE'/>\n        </module>\",\n        \"<module name='WhitespaceAround'>\n            <property name='tokens' value='LITERAL_NEW, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS, LITERAL_TRANSIENT, LITERAL_VOLATILE, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_SWITCH, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_FINALLY, LITERAL_CATCH, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_RETURN, LITERAL_THROW, LITERAL_THROWS", "4.6.3 Horizontal alignment: never required": "{\n    \"Answer\": \"No\",\n    \"Configuration\": []\n}", "4.7 Grouping parentheses: recommended": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='UnnecessaryParentheses'>\n            <property name='id' value='UnnecessaryParentheses'/>\n            <property name='tokens' value='EXPR, LITERAL_IF, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_RETURN, LITERAL_THROW, LITERAL_ASSERT, LITERAL_BREAK, LITERAL_CONTINUE, LITERAL_CASE, LITERAL_DEFAULT, LITERAL_NEW, LITERAL_THIS, LITERAL_SUPER, LITERAL_CLASS, LITERAL_INTERFACE, LITERAL_ENUM, LITERAL_ANNOTATION, LITERAL_RECORD, LITERAL_VAR, LITERAL_YIELD, LITERAL_MODULE, LITERAL_REQUIRES, LITERAL_EXPORTS, LITERAL_OPENS, LITERAL_USES, LITERAL_PROVIDES, LITERAL_TO, LITERAL_WITH, LITERAL_TRANSITIVE, LITERAL_STATIC, LITERAL_SEALED, LITERAL_NON_SEALED, LITERAL_PERMITS, LITERAL_RECORD_COMPONENTS, LITERAL_RECORD_COMPONENT, LITERAL_RECORD_COMPONENT_NAME, LITERAL_RECORD_COMPONENT_TYPE, LITERAL_RECORD_COMPONENT_ANNOTATION, LITERAL_RECORD_COMPONENT_MODIFIER, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_VAR, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, LITERAL_RECORD_COMPONENT_NATIVE, LITERAL_RECORD_COMPONENT_STRICTFP, LITERAL_RECORD_COMPONENT_ABSTRACT, LITERAL_RECORD_COMPONENT_DEFAULT, LITERAL_RECORD_COMPONENT_STATIC, LITERAL_RECORD_COMPONENT_FINAL, LITERAL_RECORD_COMPONENT_TRANSIENT, LITERAL_RECORD_COMPONENT_VOLATILE, LITERAL_RECORD_COMPONENT_SYNCHRONIZED, L", "4.8.1 Enum classes": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoEnumTrailingComma'>\n            <property name='id' value='no_enum_trailing_comma'/>\n        </module>\",\n        \"<module name='Indentation'>\n            <property name='id' value='indentation'/>\n            <property name='basicOffset' value='2'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='caseIndent' value='2'/>\n            <property name='throwsIndent' value='4'/>\n            <property name='lineWrappingIndentation' value='8'/>\n        </module>\"\n    ]\n}", "4.8.4 Switch statements": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='caseIndent' value='4'/>\n            <property name='basicOffset' value='4'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='lineWrappingIndentation' value='8'/>\n        </module>\",\n        \"<module name='FallThrough'>\n            <property name='commentFormat' value='(fall through|falls? through|fallthru|intentional fall through|no break needed)'/>\n        </module>\",\n        \"<module name='NoWhitespaceBeforeCaseDefaultColon'/>\",\n        \"<module name='DefaultComesLast'/>\",\n        \"<module name='MissingSwitchDefault'/>\"\n    ]\n}", "4.8.6 Comments": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='CommentsIndentation'>\n  <property name='id' value='CommentsIndentation'/>\n  <property name='severity' value='warning'/>\n</module>\",\n        \"<module name='TrailingComment'>\n  <property name='id' value='TrailingComment'/>\n  <property name='severity' value='warning'/>\n</module>\"\n    ]\n}", "4.8.6.1 Block comment style": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='CommentsIndentation'>\n            <property name='id' value='CommentsIndentation'/>\n            <property name='severity' value='warning'/>\n        </module>\"\n    ]\n}", "4.8.7 Modifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ModifierOrder'>\n            <property name='id' value='modifierOrder'/>\n            <property name='order' value='public protected private abstract default static final transient volatile synchronized native strictfp'/>\n        </module>\"\n    ]\n}", "4.8.8 Numeric Literals": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='UpperEll'>\n            <property name='id' value='upperEllCheck'/>\n        </module>\"\n    ]\n}", "5.1 Rules common to all identifiers": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LambdaParameterName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='InterfaceTypeParameterName'>\n  <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='TypeName'>\n  <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='RecordComponentName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='CatchParameterName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='MethodTypeParameterName'>\n  <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='ClassTypeParameterName'>\n  <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='ParameterName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='RecordTypeParameterName'>\n  <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='LocalVariableName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='MethodName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='LocalFinalVariableName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='PatternVariableName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\",\n        \"<module name='ConstantName'>\n  <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n</module>\",\n        \"<module name='StaticVariableName'>\n  <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n</module>\"\n    ]\n}", "5.2.1 Package names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='PackageName'>\n            <property name='format' value='^[a-z0-9]+(\\\\.[a-z0-9]+)*$'/>\n        </module>\"\n    ]\n}", "5.2.2 Class names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*Test$'/>\n            <property name='applyToClassNames' value='true'/>\n        </module>\"\n    ]\n}", "5.2.3 Method names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MethodName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]*)*$'/>\n        </module>\"\n    ]\n}", "5.2.4 Constant names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ConstantName'>\n            <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        </module>\"\n    ]\n}", "5.2.5 Non-constant field names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MemberName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n            <property name='applyToPublic' value='true'/>\n            <property name='applyToProtected' value='true'/>\n            <property name='applyToPackage' value='true'/>\n            <property name='applyToPrivate' value='true'/>\n        </module>\"\n    ]\n}", "5.2.6 Parameter names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ParameterName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='ParameterName'>\n            <property name='tokens' value='METHOD_DEF, CTOR_DEF'/>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}", "5.2.7 Local variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='LocalVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}", "5.2.8 Type variable names": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ClassTypeParameterName'>\n            <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n        </module>\",\n        \"<module name='MethodTypeParameterName'>\n            <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n        </module>\",\n        \"<module name='InterfaceTypeParameterName'>\n            <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n        </module>\",\n        \"<module name='RecordTypeParameterName'>\n            <property name='format' value='^[A-Z][0-9]?$|^[A-Z][a-zA-Z0-9]*T$'/>\n        </module>\"\n    ]\n}", "5.3 Camel case: defined": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AbbreviationAsWordInName'>\n            <property name='allowedAbbreviationLength' value='2'/>\n            <property name='allowedAbbreviations' value='XML,HTTP,ID,IPv6,iOS,YouTube'/>\n        </module>\",\n        \"<module name='MethodName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='ParameterName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='LocalVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='MemberName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='StaticVariableName'>\n            <property name='format' value='^[a-z][a-zA-Z0-9]*$'/>\n        </module>\",\n        \"<module name='ConstantName'>\n            <property name='format' value='^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'/>\n        </module>\",\n        \"<module name='TypeName'>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}", "6.2 Caught exceptions: not ignored": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='EmptyCatchBlock'>\n            <property name='exceptionVariableName' value='expected'/>\n            <property name='commentRequired' value='true'/>\n        </module>\"\n    ]\n}", "6.3 Static members: qualified using class": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='RequireThis'>\n            <property name='tokens' value='METHOD_CALL'/>\n            <property name='format' value='^[A-Z][a-zA-Z0-9]*$'/>\n        </module>\"\n    ]\n}", "6.4 Finalizers: not used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='NoFinalizer'>\n            <property name='id' value='noFinalizer'/>\n        </module>\"\n    ]\n}", "7.1.1 General form": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocStyle'>\n            <property name='checkFirstSentence' value='true'/>\n            <property name='checkEmptyJavadoc' value='true'/>\n        </module>\",\n        \"<module name='SingleLineJavadoc'>\n            <property name='ignoreInlineTags' value='true'/>\n        </module>\",\n        \"<module name='JavadocMissingLeadingAsterisk'>\n            <property name='severity' value='warning'/>\n        </module>\",\n        \"<module name='JavadocMissingWhitespaceAfterAsterisk'>\n            <property name='severity' value='warning'/>\n        </module>\"\n    ]\n}", "7.1.2 Paragraphs": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocParagraph'>\n            <property name='allowEmptyParagraphs' value='false'/>\n            <property name='allowHtmlParagraphTags' value='true'/>\n        </module>\",\n        \"<module name='RequireEmptyLineBeforeBlockTagGroup'>\n            <property name='allowNoLine' value='false'/>\n        </module>\"\n    ]\n}", "7.1.3 Block tags": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AtclauseOrder'>\n            <property name='tagOrder' value='param, return, throws, deprecated'/>\n        </module>\",\n        \"<module name='NonEmptyAtclauseDescription'>\n            <property name='tags' value='param, return, throws, deprecated'/>\n        </module>\",\n        \"<module name='JavadocTagContinuationIndentation'>\n            <property name='indentation' value='4'/>\n        </module>\"\n    ]\n}", "7.2 The summary fragment": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='SummaryJavadoc'>\n            <property name='id' value='SummaryJavadoc'/>\n            <property name='tag' value='@return'/>\n            <property name='forbiddenSummaryFragments' value='A{@code Foo} is a..., This method returns..., Save the record.'/>\n        </module>\",\n        \"<module name='SingleLineJavadoc'>\n            <property name='id' value='SingleLineJavadoc'/>\n            <property name='forbiddenTags' value='@return'/>\n        </module>\"\n    ]\n}", "7.3 Where Javadoc is used": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocType'>\n            <property name='scope' value='public'/>\n        </module>\",\n        \"<module name='JavadocMethod'>\n            <property name='scope' value='public,protected'/>\n        </module>\"\n    ]\n}", "7.3.1 Exception: self-explanatory members": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MissingJavadocMethod'>\n            <property name='scope' value='public'/>\n            <property name='allowMissingJavadoc' value='true'/>\n            <property name='excludeScope' value='private'/>\n            <property name='ignoreMethodNamesRegex' value='^get[A-Z].*'/>\n        </module>\",\n        \"<module name='JavadocMethod'>\n            <property name='scope' value='public'/>\n            <property name='allowMissingJavadoc' value='true'/>\n            <property name='excludeScope' value='private'/>\n            <property name='ignoreMethodNamesRegex' value='^get[A-Z].*'/>\n        </module>\"\n    ]\n}", "7.3.2 Exception: overrides": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MissingJavadocMethod'>\n            <property name='scope' value='public'/>\n            <property name='allowMissingJavadoc' value='true'/>\n            <property name='ignoreMethodNamesRegex' value='.*'/>\n        </module>\"\n    ]\n}", "7.3.4 Non-required Javadoc": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='JavadocVariable'>\n            <property name='scope' value='protected'/>\n            <property name='scope' value='package'/>\n            <property name='scope' value='private'/>\n        </module>\",\n        \"<module name='JavadocMethod'>\n            <property name='scope' value='protected'/>\n            <property name='scope' value='package'/>\n            <property name='scope' value='private'/>\n        </module>\",\n        \"<module name='JavadocType'>\n            <property name='scope' value='protected'/>\n            <property name='scope' value='package'/>\n            <property name='scope' value='private'/>\n        </module>\",\n        \"<module name='MissingJavadocMethod'>\n            <property name='scope' value='protected'/>\n            <property name='scope' value='package'/>\n            <property name='scope' value='private'/>\n        </module>\",\n        \"<module name='MissingJavadocType'>\n            <property name='scope' value='protected'/>\n            <property name='scope' value='package'/>\n            <property name='scope' value='private'/>\n        </module>\"\n    ]\n}", "4.8.5.1 Type-use annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationLocation'>\n            <property name='id' value='annotationLocation'/>\n            <property name='severity' value='error'/>\n            <property name='tokens' value='TYPE_USE'/>\n        </module>\"\n    ]\n}", "4.8.5.2 Class annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationUseStyle'>\n  <property name='id' value='annotation_use_style'/>\n  <property name='elementStyle' value='SINGLE_LINE'/>\n</module>\",\n        \"<module name='AnnotationLocation'>\n  <property name='id' value='annotation_location'/>\n  <property name='allowSamelineMultipleAnnotations' value='false'/>\n  <property name='allowSamelineSingleAnnotation' value='false'/>\n</module>\"\n    ]\n}", "4.8.5.3 Method and constructor annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationLocation'>\n            <property name='allowSamelineSingleParameterless' value='true'/>\n        </module>\",\n        \"<module name='AnnotationUseStyle'>\n            <property name='allowSamelineSingleParameterless' value='true'/>\n        </module>\"\n    ]\n}", "4.8.5.4 Field annotations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='AnnotationUseStyle'>\n            <property name='allowSamelineMultipleAnnotations' value='true'/>\n        </module>\"\n    ]\n}", "4.8.5.5 Parameter and local variable annotations": "{\n    \"Answer\": \"No\",\n    \"Configuration\": []\n}", "3.4.2.1 Overloads: never split": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='OverloadMethodsDeclarationOrder'>\n            <property name='id' value='overloadMethodsDeclarationOrder'/>\n            <property name='tokens' value='METHOD_DEF,CTOR_DEF'/>\n        </module>\"\n    ]\n}", "4.8.2.1 One variable per declaration": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MultipleVariableDeclarations'>\n            <property name='allowForLoopMultipleInitialization' value='true'/>\n        </module>\"\n    ]\n}", "4.8.2.2 Declared when needed": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='VariableDeclarationUsageDistance'>\n            <property name='allowedDistance' value='3'/>\n        </module>\"\n    ]\n}", "4.8.3.1 Array initializers: can be \"block-like\"": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ArrayTypeStyle'>\n            <property name='id' value='arrayTypeStyle'/>\n            <property name='tokens' value='ARRAY_INIT'/>\n        </module>\",\n        \"<module name='Indentation'>\n            <property name='id' value='indentation'/>\n            <property name='arrayInitIndent' value='4'/>\n        </module>\"\n    ]\n}", "4.8.3.2 No C-style array declarations": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='ArrayTypeStyle'>\n            <property name='id' value='arrayTypeStyle'/>\n            <property name='javaStyle' value='true'/>\n        </module>\"\n    ]\n}", "4.8.4.1 Indentation": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='Indentation'>\n            <property name='caseIndent' value='2'/>\n            <property name='basicOffset' value='2'/>\n            <property name='braceAdjustment' value='0'/>\n            <property name='lineWrappingIndentation' value='2'/>\n            <property name='arrayInitIndent' value='2'/>\n            <property name='throwsIndent' value='4'/>\n            <property name='arrayInitWrapIndent' value='4'/>\n            <property name='lineWrappingIndentation' value='4'/>\n        </module>\"\n    ]\n}", "4.8.4.2 Fall-through: commented": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='FallThrough'>\n            <property name='commentFormat' value='fall[ -]?through'/>\n        </module>\"\n    ]\n}", "4.8.4.3 Presence of the default label": "{\n    \"Answer\": \"Yes\",\n    \"Configuration\": [\n        \"<module name='MissingSwitchDefault'>\n            <property name='id' value='missingSwitchDefault'/>\n        </module>\"\n    ]\n}"}